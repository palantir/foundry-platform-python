components:
  schemas:
    AbortTransactionPermissionDenied:
      description: The provided token does not have permission to abort the given
        treansaction on the given dataset.
      properties:
        errorCode:
          enum:
          - PERMISSION_DENIED
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
            transactionRid:
              $ref: '#/components/schemas/TransactionRid'
          required:
          - datasetRid
          - transactionRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ActionContainsDuplicateEdits:
      description: The given action request has multiple edits on the same object.
      properties:
        errorCode:
          enum:
          - CONFLICT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ActionEditedPropertiesNotFound:
      description: 'Actions attempted to edit properties that could not be found on
        the object type.

        Please contact the Ontology administrator to resolve this issue.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ActionNotFound:
      description: The action is not found, or the user does not have access to it.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            actionRid:
              $ref: '#/components/schemas/ActionRid'
          required:
          - actionRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ActionParameterArrayType:
      properties:
        subType:
          $ref: '#/components/schemas/ActionParameterType'
        type:
          type: string
      required:
      - subType
      - type
      type: object
    ActionParameterObjectNotFound:
      description: 'The parameter object reference or parameter default value is not
        found, or the client token does not have access to it.

        '
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            parameterId:
              $ref: '#/components/schemas/ParameterId'
          required:
          - parameterId
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ActionParameterObjectTypeNotFound:
      description: 'The parameter references an object type that could not be found,
        or the client token does not have access to it.

        '
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            parameterId:
              $ref: '#/components/schemas/ParameterId'
          required:
          - parameterId
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ActionParameterType:
      description: 'A union of all the types supported by Ontology Action parameters.

        '
      discriminator:
        mapping:
          array: '#/components/schemas/ActionParameterArrayType'
          attachment: '#/components/schemas/AttachmentType'
          boolean: '#/components/schemas/BooleanType'
          date: '#/components/schemas/DateType'
          double: '#/components/schemas/DoubleType'
          integer: '#/components/schemas/IntegerType'
          long: '#/components/schemas/LongType'
          object: '#/components/schemas/OntologyObjectType'
          objectSet: '#/components/schemas/OntologyObjectSetType'
          string: '#/components/schemas/StringType'
          timestamp: '#/components/schemas/TimestampType'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/ActionParameterArrayType'
      - $ref: '#/components/schemas/AttachmentType'
      - $ref: '#/components/schemas/BooleanType'
      - $ref: '#/components/schemas/DateType'
      - $ref: '#/components/schemas/DoubleType'
      - $ref: '#/components/schemas/IntegerType'
      - $ref: '#/components/schemas/LongType'
      - $ref: '#/components/schemas/OntologyObjectSetType'
      - $ref: '#/components/schemas/OntologyObjectType'
      - $ref: '#/components/schemas/StringType'
      - $ref: '#/components/schemas/TimestampType'
    ActionParameterV2:
      description: Details about a parameter of an action.
      properties:
        dataType:
          $ref: '#/components/schemas/ActionParameterType'
        description:
          type: string
        required:
          type: boolean
      required:
      - dataType
      - required
      type: object
    ActionRid:
      description: The unique resource identifier for an action.
      type: string
    ActionType:
      description: Represents an action type in the Ontology.
      properties:
        apiName:
          $ref: '#/components/schemas/ActionTypeApiName'
        description:
          type: string
        displayName:
          $ref: '#/components/schemas/DisplayName'
        operations:
          items:
            $ref: '#/components/schemas/LogicRule'
          type: array
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/Parameter'
          type: object
        rid:
          $ref: '#/components/schemas/ActionTypeRid'
        status:
          $ref: '#/components/schemas/ReleaseStatus'
      required:
      - apiName
      - rid
      - status
      type: object
    ActionTypeApiName:
      description: 'The name of the action type in the API. To find the API name for
        your Action Type, use the `List action types`

        endpoint or check the **Ontology Manager**.

        '
      type: string
    ActionTypeNotFound:
      description: The action type is not found, or the user does not have access
        to it.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            actionType:
              $ref: '#/components/schemas/ActionTypeApiName'
            rid:
              $ref: '#/components/schemas/ActionTypeRid'
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ActionTypeRid:
      description: 'The unique resource identifier of an action type, useful for interacting
        with other Foundry APIs.

        '
      type: string
    ActionTypeV2:
      description: Represents an action type in the Ontology.
      properties:
        apiName:
          $ref: '#/components/schemas/ActionTypeApiName'
        description:
          type: string
        displayName:
          $ref: '#/components/schemas/DisplayName'
        operations:
          items:
            $ref: '#/components/schemas/LogicRule'
          type: array
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/ActionParameterV2'
          type: object
        rid:
          $ref: '#/components/schemas/ActionTypeRid'
        status:
          $ref: '#/components/schemas/ReleaseStatus'
      required:
      - apiName
      - rid
      - status
      type: object
    ActionValidationFailed:
      description: 'The validation failed for the given action parameters. Please
        use the `validateAction` endpoint for more

        details.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            actionType:
              $ref: '#/components/schemas/ActionTypeApiName'
          required:
          - actionType
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    AggregationGroupCountExceededLimit:
      description: 'The number of groups in the aggregations grouping exceeded the
        allowed limit.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            groupsCount:
              type: integer
            groupsLimit:
              type: integer
          required:
          - groupsCount
          - groupsLimit
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    AnyType:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    ApiFeaturePreviewUsageOnly:
      description: 'This feature is only supported in preview mode. Please use `preview=true`
        in the query

        parameters to call this endpoint.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ApiUsageDenied:
      description: You are not allowed to use Palantir APIs.
      properties:
        errorCode:
          enum:
          - PERMISSION_DENIED
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ApplyActionFailed:
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ApplyActionMode:
      enum:
      - VALIDATE_ONLY
      - VALIDATE_AND_EXECUTE
      type: string
    ApplyActionRequestOptions:
      properties:
        mode:
          $ref: '#/components/schemas/ApplyActionMode'
        returnEdits:
          $ref: '#/components/schemas/ReturnEditsMode'
      type: object
    ArtifactRepositoryRid:
      type: string
    AsyncOperationError:
      properties:
        errorCode:
          type: string
        errorInstanceId:
          type: string
        errorName:
          type: string
        parameters:
          additionalProperties: {}
          type: object
        type:
          type: string
      required:
      - errorCode
      - errorName
      - type
      type: object
    AttachmentNotFound:
      description: "The requested attachment is not found, or the client token does\
        \ not have access to it. \nAttachments that are not attached to any objects\
        \ are deleted after two weeks.\nAttachments that have not been attached to\
        \ an object can only be viewed by the user who uploaded them.\nAttachments\
        \ that have been attached to an object can be viewed by users who can view\
        \ the object.\n"
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            attachmentRid:
              $ref: '#/components/schemas/AttachmentRid'
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    AttachmentRid:
      description: The unique resource identifier of an attachment.
      type: string
    AttachmentSizeExceededLimit:
      description: 'The file is too large to be uploaded as an attachment.

        The maximum attachment size is 200MB.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            fileLimitBytes:
              type: string
            fileSizeBytes:
              type: string
          required:
          - fileLimitBytes
          - fileSizeBytes
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    AttachmentType:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    BBox:
      description: 'A GeoJSON object MAY have a member named "bbox" to include

        information on the coordinate range for its Geometries, Features, or

        FeatureCollections. The value of the bbox member MUST be an array of

        length 2*n where n is the number of dimensions represented in the

        contained geometries, with all axes of the most southwesterly point

        followed by all axes of the more northeasterly point. The axes order

        of a bbox follows the axes order of geometries.

        '
      items:
        $ref: '#/components/schemas/Coordinate'
      type: array
    BinaryType:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    BooleanType:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    Branch:
      description: 'A Branch of a Dataset.

        '
      properties:
        branchId:
          $ref: '#/components/schemas/BranchId'
        transactionRid:
          $ref: '#/components/schemas/TransactionRid'
      required:
      - branchId
      type: object
    BranchAlreadyExists:
      description: The branch cannot be created because a branch with that name already
        exists.
      properties:
        errorCode:
          enum:
          - CONFLICT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            branchId:
              $ref: '#/components/schemas/BranchId'
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
          required:
          - branchId
          - datasetRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    BranchId:
      description: 'The identifier (name) of a Branch. Example: `master`.

        '
      type: string
    BranchNotFound:
      description: The requested branch could not be found, or the client token does
        not have access to it.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            branchId:
              $ref: '#/components/schemas/BranchId'
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
          required:
          - branchId
          - datasetRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ByteType:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    ColumnTypesNotSupported:
      description: The dataset contains column types that are not supported.
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
          required:
          - datasetRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    CommitTransactionPermissionDenied:
      description: The provided token does not have permission to commit the given
        treansaction on the given dataset.
      properties:
        errorCode:
          enum:
          - PERMISSION_DENIED
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
            transactionRid:
              $ref: '#/components/schemas/TransactionRid'
          required:
          - datasetRid
          - transactionRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    CompositePrimaryKeyNotSupported:
      description: 'Primary keys consisting of multiple properties are not supported
        by this API. If you need support for this,

        please reach out to Palantir Support.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            objectType:
              $ref: '#/components/schemas/ObjectTypeApiName'
            primaryKey:
              items:
                $ref: '#/components/schemas/PropertyApiName'
              type: array
          required:
          - objectType
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    Coordinate:
      format: double
      type: number
    CreateBranchPermissionDenied:
      description: The provided token does not have permission to create a branch
        of this dataset.
      properties:
        errorCode:
          enum:
          - PERMISSION_DENIED
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            branchId:
              $ref: '#/components/schemas/BranchId'
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
          required:
          - branchId
          - datasetRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    CreateBranchRequest:
      properties:
        branchId:
          $ref: '#/components/schemas/BranchId'
        transactionRid:
          $ref: '#/components/schemas/TransactionRid'
      required:
      - branchId
      type: object
    CreateDatasetPermissionDenied:
      description: The provided token does not have permission to create a dataset
        in this folder.
      properties:
        errorCode:
          enum:
          - PERMISSION_DENIED
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            name:
              $ref: '#/components/schemas/DatasetName'
            parentFolderRid:
              $ref: '#/components/schemas/FolderRid'
          required:
          - name
          - parentFolderRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    CreateDatasetRequest:
      properties:
        name:
          $ref: '#/components/schemas/DatasetName'
        parentFolderRid:
          $ref: '#/components/schemas/FolderRid'
      required:
      - name
      - parentFolderRid
      type: object
    CreateLinkRule:
      properties:
        aSideObjectTypeApiName:
          $ref: '#/components/schemas/ObjectTypeApiName'
        bSideObjectTypeApiName:
          $ref: '#/components/schemas/ObjectTypeApiName'
        linkTypeApiNameAtoB:
          $ref: '#/components/schemas/LinkTypeApiName'
        linkTypeApiNameBtoA:
          $ref: '#/components/schemas/LinkTypeApiName'
        type:
          type: string
      required:
      - aSideObjectTypeApiName
      - bSideObjectTypeApiName
      - linkTypeApiNameAtoB
      - linkTypeApiNameBtoA
      - type
      type: object
    CreateObjectRule:
      properties:
        objectTypeApiName:
          $ref: '#/components/schemas/ObjectTypeApiName'
        type:
          type: string
      required:
      - objectTypeApiName
      - type
      type: object
    CreateTransactionPermissionDenied:
      description: The provided token does not have permission to create a transaction
        on this dataset.
      properties:
        errorCode:
          enum:
          - PERMISSION_DENIED
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            branchId:
              $ref: '#/components/schemas/BranchId'
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
          required:
          - branchId
          - datasetRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    CreateTransactionRequest:
      properties:
        transactionType:
          $ref: '#/components/schemas/TransactionType'
      type: object
    DataValue:
      description: 'Represents the value of data in the following format. Note that
        these values can be nested, for example an array of structs.

        | Type                        | JSON encoding                                         |
        Example                                                                       |

        |-----------------------------|-------------------------------------------------------|-------------------------------------------------------------------------------|

        | Array                       | array                                                 |
        `["alpha", "bravo", "charlie"]`                                               |

        | Attachment                  | string                                                |
        `"ri.attachments.main.attachment.2f944bae-5851-4204-8615-920c969a9f2e"`       |

        | Boolean                     | boolean                                               |
        `true`                                                                        |

        | Byte                        | number                                                |
        `31`                                                                          |

        | Date                        | ISO 8601 extended local date string                   |
        `"2021-05-01"`                                                                |

        | Decimal                     | string                                                |
        `"2.718281828"`                                                               |

        | Float                       | number                                                |
        `3.14159265`                                                                  |

        | Double                      | number                                                |
        `3.14159265`                                                                  |

        | Integer                     | number                                                |
        `238940`                                                                      |

        | Long                        | string                                                |
        `"58319870951433"`                                                            |

        | Null                        | null                                                  |
        `null`                                                                        |

        | Object Set                  | string                                                |
        `ri.object-set.main.versioned-object-set.h13274m8-23f5-431c-8aee-a4554157c57z`|

        | Ontology Object Reference   | JSON encoding of the object''s primary key             |
        `10033123` or `"EMP1234"`                                                     |

        | Set                         | array                                                 |
        `["alpha", "bravo", "charlie"]`                                               |

        | Short                       | number                                                |
        `8739`                                                                        |

        | String                      | string                                                |
        `"Call me Ishmael"`                                                           |

        | Struct                      | JSON object                                           |
        `{"name": "John Doe", "age": 42}`                                             |

        | TwoDimensionalAggregation   | JSON object                                           |
        `{"groups": [{"key": "alpha", "value": 100}, {"key": "beta", "value": 101}]}`
        |

        | ThreeDimensionalAggregation | JSON object                                           |
        `{"groups": [{"key": "NYC", "groups": [{"key": "Engineer", "value" : 100}]}]}`|

        | Timestamp                   | ISO 8601 extended offset date-time string
        in UTC zone | `"2021-01-04T05:00:00Z"`                                                      |

        '
    Dataset:
      properties:
        name:
          $ref: '#/components/schemas/DatasetName'
        parentFolderRid:
          $ref: '#/components/schemas/FolderRid'
        rid:
          $ref: '#/components/schemas/DatasetRid'
      required:
      - name
      - parentFolderRid
      - rid
      type: object
    DatasetName:
      type: string
    DatasetNotFound:
      description: The requested dataset could not be found, or the client token does
        not have access to it.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
          required:
          - datasetRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    DatasetRid:
      description: 'The Resource Identifier (RID) of a Dataset. Example: `ri.foundry.main.dataset.c26f11c8-cdb3-4f44-9f5d-9816ea1c82da`.

        '
      type: string
    DateType:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    DecimalType:
      properties:
        precision:
          type: integer
        scale:
          type: integer
        type:
          type: string
      required:
      - type
      type: object
    DeleteBranchPermissionDenied:
      description: The provided token does not have permission to delete the given
        branch from this dataset.
      properties:
        errorCode:
          enum:
          - PERMISSION_DENIED
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            branchId:
              $ref: '#/components/schemas/BranchId'
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
          required:
          - branchId
          - datasetRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    DeleteLinkRule:
      properties:
        aSideObjectTypeApiName:
          $ref: '#/components/schemas/ObjectTypeApiName'
        bSideObjectTypeApiName:
          $ref: '#/components/schemas/ObjectTypeApiName'
        linkTypeApiNameAtoB:
          $ref: '#/components/schemas/LinkTypeApiName'
        linkTypeApiNameBtoA:
          $ref: '#/components/schemas/LinkTypeApiName'
        type:
          type: string
      required:
      - aSideObjectTypeApiName
      - bSideObjectTypeApiName
      - linkTypeApiNameAtoB
      - linkTypeApiNameBtoA
      - type
      type: object
    DeleteObjectRule:
      properties:
        objectTypeApiName:
          $ref: '#/components/schemas/ObjectTypeApiName'
        type:
          type: string
      required:
      - objectTypeApiName
      - type
      type: object
    DeleteSchemaPermissionDenied:
      description: todo
      properties:
        errorCode:
          enum:
          - PERMISSION_DENIED
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            branchId:
              $ref: '#/components/schemas/BranchId'
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
            transactionRid:
              $ref: '#/components/schemas/TransactionRid'
          required:
          - branchId
          - datasetRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    DeploymentApi:
      properties:
        transform:
          $ref: '#/components/schemas/DeploymentTransformApi'
      type: object
    DeploymentApiName:
      type: string
    DeploymentDescription:
      description: 'A description or explanation of what this model deployment does
        and is intended to be used for.

        '
      type: string
    DeploymentListing:
      description: 'Name and description associated with a model deployment.

        '
      properties:
        apiName:
          $ref: '#/components/schemas/DeploymentApiName'
        description:
          $ref: '#/components/schemas/DeploymentDescription'
      required:
      - apiName
      type: object
    DeploymentMetadata:
      description: 'Metadata related to a model deployment.

        '
      properties:
        api:
          $ref: '#/components/schemas/DeploymentApi'
        apiName:
          $ref: '#/components/schemas/DeploymentApiName'
        description:
          $ref: '#/components/schemas/DeploymentDescription'
      required:
      - api
      - apiName
      type: object
    DeploymentNotAvailable:
      description: The requested model deployment does not have a model deployed.
        It may be disabled or failed.
      properties:
        errorCode:
          enum:
          - INTERNAL
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            deploymentApiName:
              $ref: '#/components/schemas/DeploymentApiName'
            ontologyApiName:
              $ref: '#/components/schemas/OntologyApiName'
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    DeploymentNotFound:
      description: The requested model deployment is not found, or the client token
        does not have access to it.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            deploymentApiName:
              $ref: '#/components/schemas/DeploymentApiName'
            ontologyApiName:
              $ref: '#/components/schemas/OntologyApiName'
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    DeploymentTransformApi:
      properties:
        inputs:
          items:
            $ref: '#/components/schemas/ModelApiDataType'
          type: array
        outputs:
          items:
            $ref: '#/components/schemas/ModelApiDataType'
          type: array
      type: object
    DisplayName:
      description: The display name of the entity.
      type: string
    DistanceUnit:
      enum:
      - MILLIMETERS
      - CENTIMETERS
      - METERS
      - KILOMETERS
      - INCHES
      - FEET
      - YARDS
      - MILES
      - NAUTICAL_MILES
      type: string
    DoubleType:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    DuplicateOrderBy:
      description: The requested sort order includes duplicate properties.
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            properties:
              items:
                $ref: '#/components/schemas/PropertyApiName'
              type: array
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    EditObjectPermissionDenied:
      description: 'The user does not have permission to edit this `ObjectType`.

        '
      properties:
        errorCode:
          enum:
          - PERMISSION_DENIED
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    FieldName:
      description: 'The name of a field.

        '
      type: string
    File:
      properties:
        path:
          $ref: '#/components/schemas/FilePath'
        sizeBytes:
          format: long
          type: string
        transactionRid:
          $ref: '#/components/schemas/TransactionRid'
        updatedTime:
          format: date-time
          type: string
      required:
      - path
      - transactionRid
      - updatedTime
      type: object
    FileAlreadyExists:
      description: The given file path already exists in the dataset and transaction.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
            path:
              $ref: '#/components/schemas/FilePath'
            transactionRid:
              $ref: '#/components/schemas/TransactionRid'
          required:
          - datasetRid
          - path
          - transactionRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    FileNotFoundOnBranch:
      description: The requested file could not be found on the given branch, or the
        client token does not have access to it.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            branchId:
              $ref: '#/components/schemas/BranchId'
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
            path:
              $ref: '#/components/schemas/FilePath'
          required:
          - branchId
          - datasetRid
          - path
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    FileNotFoundOnTransactionRange:
      description: The requested file could not be found on the given transaction
        range, or the client token does not have access to it.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
            endTransactionRid:
              $ref: '#/components/schemas/TransactionRid'
            path:
              $ref: '#/components/schemas/FilePath'
            startTransactionRid:
              $ref: '#/components/schemas/TransactionRid'
          required:
          - datasetRid
          - endTransactionRid
          - path
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    FilePath:
      description: 'The path to a File within Foundry. Examples: `my-file.txt`, `path/to/my-file.jpg`,
        `dataframe.snappy.parquet`.

        '
      type: string
    FilterValue:
      description: 'Represents the value of a property filter. For instance, false
        is the FilterValue in

        `properties.{propertyApiName}.isNull=false`.

        '
      type: string
    FloatType:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    FolderNotFound:
      description: The requested folder could not be found, or the client token does
        not have access to it.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            folderRid:
              $ref: '#/components/schemas/FolderRid'
          required:
          - folderRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    FolderRid:
      type: string
    FunctionEncounteredUserFacingError:
      description: 'The authored function failed to execute because of a user induced
        error. The message argument

        is meant to be displayed to the user.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            functionRid:
              $ref: '#/components/schemas/FunctionRid'
            functionVersion:
              $ref: '#/components/schemas/FunctionVersion'
            message:
              type: string
          required:
          - functionRid
          - functionVersion
          - message
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    FunctionExecutionFailed:
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            functionRid:
              $ref: '#/components/schemas/FunctionRid'
            functionVersion:
              $ref: '#/components/schemas/FunctionVersion'
          required:
          - functionRid
          - functionVersion
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    FunctionExecutionTimedOut:
      properties:
        errorCode:
          enum:
          - TIMEOUT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            functionRid:
              $ref: '#/components/schemas/FunctionRid'
            functionVersion:
              $ref: '#/components/schemas/FunctionVersion'
          required:
          - functionRid
          - functionVersion
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    FunctionInvalidInput:
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            functionRid:
              $ref: '#/components/schemas/FunctionRid'
            functionVersion:
              $ref: '#/components/schemas/FunctionVersion'
          required:
          - functionRid
          - functionVersion
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    FunctionRid:
      description: 'The unique resource identifier of a Function, useful for interacting
        with other Foundry APIs.

        '
      type: string
    FunctionVersion:
      description: 'The version of the given Function, written `<major>.<minor>.<patch>-<tag>`,
        where `-<tag>` is optional.

        Examples: `1.2.3`, `1.2.3-rc1`.

        '
      type: string
    GeoPoint:
      properties:
        bbox:
          $ref: '#/components/schemas/BBox'
        coordinates:
          $ref: '#/components/schemas/Position'
        type:
          type: string
      required:
      - coordinates
      - type
      type: object
    GeoPointType:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    GeoShapeType:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    Geometry:
      description: Abstract type for all GeoJSon object except Feature and FeatureCollection
      discriminator:
        mapping:
          GeometryCollection: '#/components/schemas/GeometryCollection'
          LineString: '#/components/schemas/LineString'
          MultiLineString: '#/components/schemas/MultiLineString'
          MultiPoint: '#/components/schemas/MultiPoint'
          MultiPolygon: '#/components/schemas/MultiPolygon'
          Point: '#/components/schemas/GeoPoint'
          Polygon: '#/components/schemas/Polygon'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/GeoPoint'
      - $ref: '#/components/schemas/MultiPoint'
      - $ref: '#/components/schemas/LineString'
      - $ref: '#/components/schemas/MultiLineString'
      - $ref: '#/components/schemas/Polygon'
      - $ref: '#/components/schemas/MultiPolygon'
      - $ref: '#/components/schemas/GeometryCollection'
    GeometryCollection:
      description: 'GeoJSon geometry collection


        GeometryCollections composed of a single part or a number of parts of a

        single type SHOULD be avoided when that single part or a single object

        of multipart type (MultiPoint, MultiLineString, or MultiPolygon) could

        be used instead.

        '
      properties:
        bbox:
          $ref: '#/components/schemas/BBox'
        geometries:
          items:
            $ref: '#/components/schemas/Geometry'
          minItems: 0
          type: array
        type:
          type: string
      required:
      - type
      type: object
    IntegerType:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    InvalidAggregationRange:
      description: 'Aggregation range should include one lt or lte and one gt or gte.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidAggregationRangePropertyType:
      description: 'Range group by is not supported by property type.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            objectType:
              $ref: '#/components/schemas/ObjectTypeApiName'
            property:
              $ref: '#/components/schemas/PropertyApiName'
            propertyBaseType:
              $ref: '#/components/schemas/ValueType'
          required:
          - objectType
          - property
          - propertyBaseType
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidAggregationRangeValue:
      description: 'Aggregation value does not conform to the expected underlying
        type.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            objectType:
              $ref: '#/components/schemas/ObjectTypeApiName'
            property:
              $ref: '#/components/schemas/PropertyApiName'
            propertyBaseType:
              $ref: '#/components/schemas/ValueType'
          required:
          - objectType
          - property
          - propertyBaseType
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidApplyActionOptionCombination:
      description: The given options are individually valid but cannot be used in
        the given combination.
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            invalidCombination:
              $ref: '#/components/schemas/ApplyActionRequestOptions'
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidBranchId:
      description: The requested branch name cannot be used. Branch names cannot be
        empty and must not look like RIDs or UUIDs.
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            branchId:
              $ref: '#/components/schemas/BranchId'
          required:
          - branchId
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidContentLength:
      description: A `Content-Length` header is required for all uploads, but was
        missing or invalid.
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidContentType:
      description: 'The `Content-Type` cannot be inferred from the request content
        and filename.

        Please check your request content and filename to ensure they are compatible.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidDurationGroupByPropertyType:
      description: 'Invalid property type for duration groupBy.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            objectType:
              $ref: '#/components/schemas/ObjectTypeApiName'
            property:
              $ref: '#/components/schemas/PropertyApiName'
            propertyBaseType:
              $ref: '#/components/schemas/ValueType'
          required:
          - objectType
          - property
          - propertyBaseType
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidDurationGroupByValue:
      description: 'Duration groupBy value is invalid.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidFields:
      description: TBD
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            properties:
              items:
                type: string
              type: array
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidGroupId:
      description: The provided value for a group id must be a UUID.
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            groupId:
              type: string
          required:
          - groupId
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidPageSize:
      description: The provided page size was zero or negative. Page sizes must be
        greater than zero.
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            pageSize:
              $ref: '#/components/schemas/PageSize'
          required:
          - pageSize
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidPageToken:
      description: The provided page token could not be used to retrieve the next
        page of results.
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            pageToken:
              $ref: '#/components/schemas/PageToken'
          required:
          - pageToken
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidParameterCombination:
      description: The given parameters are individually valid but cannot be used
        in the given combination.
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            providedParameters:
              items:
                type: string
              type: array
            validCombinations:
              items:
                items:
                  type: string
                type: array
              type: array
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidParameterValue:
      description: 'The value of the given parameter is invalid. See the documentation
        of `DataValue` for details on

        how parameters are represented.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            parameterBaseType:
              $ref: '#/components/schemas/ValueType'
            parameterDataType:
              $ref: '#/components/schemas/OntologyDataType'
            parameterId:
              $ref: '#/components/schemas/ParameterId'
            parameterValue:
              $ref: '#/components/schemas/DataValue'
          required:
          - parameterId
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidPropertyFilterValue:
      description: 'The value of the given property filter is invalid. For instance,
        2 is an invalid value for

        `isNull` in `properties.address.isNull=2` because the `isNull` filter expects
        a value of boolean type.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            expectedType:
              $ref: '#/components/schemas/ValueType'
            property:
              $ref: '#/components/schemas/PropertyApiName'
            propertyFilter:
              $ref: '#/components/schemas/PropertyFilter'
            propertyFilterValue:
              $ref: '#/components/schemas/FilterValue'
          required:
          - expectedType
          - property
          - propertyFilter
          - propertyFilterValue
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidPropertyFiltersCombination:
      description: The provided filters cannot be used together.
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            property:
              $ref: '#/components/schemas/PropertyApiName'
            propertyFilters:
              items:
                $ref: '#/components/schemas/PropertyFilter'
              type: array
          required:
          - property
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidPropertyType:
      description: 'The given property type is not of the expected type.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            property:
              $ref: '#/components/schemas/PropertyApiName'
            propertyBaseType:
              $ref: '#/components/schemas/ValueType'
          required:
          - property
          - propertyBaseType
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidPropertyValue:
      description: 'The value of the given property is invalid. See the documentation
        of `PropertyValue` for details on

        how properties are represented.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            property:
              $ref: '#/components/schemas/PropertyApiName'
            propertyBaseType:
              $ref: '#/components/schemas/ValueType'
            propertyValue:
              $ref: '#/components/schemas/PropertyValue'
          required:
          - property
          - propertyBaseType
          - propertyValue
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidQueryParameterValue:
      description: 'The value of the given parameter is invalid. See the documentation
        of `DataValue` for details on

        how parameters are represented.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            parameterDataType:
              $ref: '#/components/schemas/QueryDataType'
            parameterId:
              $ref: '#/components/schemas/ParameterId'
            parameterValue:
              $ref: '#/components/schemas/DataValue'
          required:
          - parameterDataType
          - parameterId
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidRangeQuery:
      description: 'The specified query range filter is invalid.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            field:
              type: string
            gt:
              description: Greater than
            gte:
              description: Greater than or equal
            lt:
              description: Less than
            lte:
              description: Less than or equal
          required:
          - field
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidSortOrder:
      description: 'The requested sort order of one or more properties is invalid.
        Valid sort orders are ''asc'' or ''desc''. Sort

        order can also be omitted, and defaults to ''asc''.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            invalidSortOrder:
              type: string
          required:
          - invalidSortOrder
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidSortType:
      description: The requested sort type of one or more clauses is invalid. Valid
        sort types are 'p' or 'properties'.
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            invalidSortType:
              type: string
          required:
          - invalidSortType
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidTransactionType:
      description: The given transaction type is not valid. Valid transaction types
        are `SNAPSHOT`, `UPDATE`, `APPEND`, and `DELETE`.
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
            transactionRid:
              $ref: '#/components/schemas/TransactionRid'
            transactionType:
              $ref: '#/components/schemas/TransactionType'
          required:
          - datasetRid
          - transactionRid
          - transactionType
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    InvalidUserId:
      description: The provided value for a user id must be a UUID.
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            userId:
              type: string
          required:
          - userId
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    LanguageModelSource:
      enum:
      - global
      - hosted
      type: string
    LanguageModelSourceNotSupported:
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            source:
              $ref: '#/components/schemas/LanguageModelSource'
          required:
          - source
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    LineString:
      properties:
        bbox:
          $ref: '#/components/schemas/BBox'
        coordinates:
          $ref: '#/components/schemas/LineStringCoordinates'
        type:
          type: string
      required:
      - type
      type: object
    LineStringCoordinates:
      description: 'GeoJSon fundamental geometry construct, array of two or more positions.

        '
      items:
        $ref: '#/components/schemas/Position'
      minItems: 2
      type: array
    LinearRing:
      description: 'A linear ring is a closed LineString with four or more positions.


        The first and last positions are equivalent, and they MUST contain

        identical values; their representation SHOULD also be identical.


        A linear ring is the boundary of a surface or the boundary of a hole in

        a surface.


        A linear ring MUST follow the right-hand rule with respect to the area

        it bounds, i.e., exterior rings are counterclockwise, and holes are

        clockwise.

        '
      items:
        $ref: '#/components/schemas/Position'
      minItems: 4
      type: array
    LinkAlreadyExists:
      description: 'The link the user is attempting to create already exists.

        '
      properties:
        errorCode:
          enum:
          - CONFLICT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    LinkTypeApiName:
      description: 'The name of the link type in the API. To find the API name for
        your Link Type, check the **Ontology Manager**

        application.

        '
      type: string
    LinkTypeNotFound:
      description: The link type is not found, or the user does not have access to
        it.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            linkType:
              $ref: '#/components/schemas/LinkTypeApiName'
            objectType:
              $ref: '#/components/schemas/ObjectTypeApiName'
          required:
          - linkType
          - objectType
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    LinkTypeSide:
      properties:
        apiName:
          $ref: '#/components/schemas/LinkTypeApiName'
        cardinality:
          $ref: '#/components/schemas/LinkTypeSideCardinality'
        displayName:
          $ref: '#/components/schemas/DisplayName'
        foreignKeyPropertyApiName:
          $ref: '#/components/schemas/PropertyApiName'
        objectTypeApiName:
          $ref: '#/components/schemas/ObjectTypeApiName'
        status:
          $ref: '#/components/schemas/ReleaseStatus'
      required:
      - apiName
      - cardinality
      - displayName
      - objectTypeApiName
      - status
      type: object
    LinkTypeSideCardinality:
      enum:
      - ONE
      - MANY
      type: string
    LinkTypeSideV2:
      properties:
        apiName:
          $ref: '#/components/schemas/LinkTypeApiName'
        cardinality:
          $ref: '#/components/schemas/LinkTypeSideCardinality'
        displayName:
          $ref: '#/components/schemas/DisplayName'
        foreignKeyPropertyApiName:
          $ref: '#/components/schemas/PropertyApiName'
        objectTypeApiName:
          $ref: '#/components/schemas/ObjectTypeApiName'
        status:
          $ref: '#/components/schemas/ReleaseStatus'
      required:
      - apiName
      - cardinality
      - displayName
      - objectTypeApiName
      - status
      type: object
    LinkedObjectNotFound:
      description: The linked object with the given primary key is not found, or the
        user does not have access to it.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            linkType:
              $ref: '#/components/schemas/LinkTypeApiName'
            linkedObjectPrimaryKey:
              additionalProperties:
                $ref: '#/components/schemas/PrimaryKeyValue'
              type: object
            linkedObjectType:
              $ref: '#/components/schemas/ObjectTypeApiName'
          required:
          - linkType
          - linkedObjectType
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ListActionTypesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ActionType'
          type: array
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
      type: object
    ListActionTypesResponseV2:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ActionTypeV2'
          type: array
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
      type: object
    ListBranchesResponse:
      properties:
        data:
          description: The list of branches in the current page.
          items:
            $ref: '#/components/schemas/Branch'
          type: array
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
      type: object
    ListDeploymentsResponse:
      properties:
        deployments:
          items:
            $ref: '#/components/schemas/DeploymentListing'
          type: array
      type: object
    ListFilesResponse:
      description: A page of Files and an optional page token that can be used to
        retrieve the next page.
      properties:
        data:
          items:
            $ref: '#/components/schemas/File'
          type: array
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
      type: object
    ListObjectTypesResponse:
      properties:
        data:
          description: The list of object types in the current page.
          items:
            $ref: '#/components/schemas/ObjectType'
          type: array
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
      type: object
    ListObjectTypesV2Response:
      properties:
        data:
          description: The list of object types in the current page.
          items:
            $ref: '#/components/schemas/ObjectTypeV2'
          type: array
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
      type: object
    ListOntologiesResponse:
      properties:
        data:
          description: The list of Ontologies the user has access to.
          items:
            $ref: '#/components/schemas/Ontology'
          type: array
      type: object
    ListOntologiesV2Response:
      properties:
        data:
          description: The list of Ontologies the user has access to.
          items:
            $ref: '#/components/schemas/OntologyV2'
          type: array
      type: object
    ListOutgoingLinkTypesResponse:
      properties:
        data:
          description: The list of link type sides in the current page.
          items:
            $ref: '#/components/schemas/LinkTypeSide'
          type: array
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
      type: object
    ListOutgoingLinkTypesResponseV2:
      properties:
        data:
          description: The list of link type sides in the current page.
          items:
            $ref: '#/components/schemas/LinkTypeSideV2'
          type: array
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
      type: object
    ListQueryTypesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/QueryType'
          type: array
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
      type: object
    ListQueryTypesResponseV2:
      properties:
        data:
          items:
            $ref: '#/components/schemas/QueryTypeV2'
          type: array
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
      type: object
    LogicRule:
      discriminator:
        mapping:
          createLink: '#/components/schemas/CreateLinkRule'
          createObject: '#/components/schemas/CreateObjectRule'
          deleteLink: '#/components/schemas/DeleteLinkRule'
          deleteObject: '#/components/schemas/DeleteObjectRule'
          modifyObject: '#/components/schemas/ModifyObjectRule'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/CreateObjectRule'
      - $ref: '#/components/schemas/ModifyObjectRule'
      - $ref: '#/components/schemas/DeleteObjectRule'
      - $ref: '#/components/schemas/CreateLinkRule'
      - $ref: '#/components/schemas/DeleteLinkRule'
    LongType:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    MalformedPropertyFilters:
      description: 'At least one of requested filters are malformed. Please look at
        the documentation of `PropertyFilter`.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            malformedPropertyFilter:
              type: string
          required:
          - malformedPropertyFilter
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    MarketplaceActionMappingNotFound:
      description: The given action could not be mapped to a Marketplace installation.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            actionType:
              $ref: '#/components/schemas/ActionTypeApiName'
            artifactRepository:
              $ref: '#/components/schemas/ArtifactRepositoryRid'
            packageName:
              $ref: '#/components/schemas/SdkPackageName'
          required:
          - actionType
          - artifactRepository
          - packageName
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    MarketplaceInstallationNotFound:
      description: 'The given marketplace installation could not be found or the user
        does not have access to it.

        '
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            artifactRepository:
              $ref: '#/components/schemas/ArtifactRepositoryRid'
            packageName:
              $ref: '#/components/schemas/SdkPackageName'
          required:
          - artifactRepository
          - packageName
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    MarketplaceLinkMappingNotFound:
      description: The given link could not be mapped to a Marketplace installation.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            artifactRepository:
              $ref: '#/components/schemas/ArtifactRepositoryRid'
            linkType:
              $ref: '#/components/schemas/LinkTypeApiName'
            objectType:
              $ref: '#/components/schemas/ObjectTypeApiName'
            packageName:
              $ref: '#/components/schemas/SdkPackageName'
          required:
          - artifactRepository
          - linkType
          - objectType
          - packageName
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    MarketplaceObjectMappingNotFound:
      description: The given object could not be mapped to a Marketplace installation.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            artifactRepository:
              $ref: '#/components/schemas/ArtifactRepositoryRid'
            objectType:
              $ref: '#/components/schemas/ObjectTypeApiName'
            packageName:
              $ref: '#/components/schemas/SdkPackageName'
          required:
          - artifactRepository
          - objectType
          - packageName
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    MarketplaceQueryMappingNotFound:
      description: The given query could not be mapped to a Marketplace installation.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            artifactRepository:
              $ref: '#/components/schemas/ArtifactRepositoryRid'
            packageName:
              $ref: '#/components/schemas/SdkPackageName'
            queryType:
              $ref: '#/components/schemas/QueryApiName'
          required:
          - artifactRepository
          - packageName
          - queryType
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    MissingParameter:
      description: 'Required parameters are missing. Please look at the `parameters`
        field to see which required parameters are

        missing from the request.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            parameters:
              items:
                $ref: '#/components/schemas/ParameterId'
              type: array
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    MissingPostBody:
      description: A post body is required for this endpoint, but was not found in
        the request.
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ModelApiArrayType:
      properties:
        subType:
          $ref: '#/components/schemas/ModelApiType'
        type:
          type: string
      required:
      - subType
      - type
      type: object
    ModelApiDataType:
      description: 'An object definition representing an input or an output type for
        the deployment API.

        '
      properties:
        name:
          $ref: '#/components/schemas/FieldName'
        propertyType:
          $ref: '#/components/schemas/ModelApiType'
        required:
          type: boolean
      type: object
    ModelApiMapType:
      properties:
        keyType:
          $ref: '#/components/schemas/ModelApiType'
        type:
          type: string
        valueType:
          $ref: '#/components/schemas/ModelApiType'
      required:
      - keyType
      - type
      - valueType
      type: object
    ModelApiStructField:
      properties:
        fieldType:
          $ref: '#/components/schemas/ModelApiType'
        name:
          type: string
      required:
      - fieldType
      - name
      type: object
    ModelApiStructType:
      properties:
        fields:
          items:
            $ref: '#/components/schemas/ModelApiStructField'
          type: array
        type:
          type: string
      required:
      - type
      type: object
    ModelApiType:
      description: 'A union of all the types supported by models.

        '
      discriminator:
        mapping:
          any: '#/components/schemas/AnyType'
          array: '#/components/schemas/ModelApiArrayType'
          boolean: '#/components/schemas/BooleanType'
          date: '#/components/schemas/DateType'
          float: '#/components/schemas/FloatType'
          integer: '#/components/schemas/IntegerType'
          map: '#/components/schemas/ModelApiMapType'
          'null': '#/components/schemas/NullType'
          string: '#/components/schemas/StringType'
          struct: '#/components/schemas/ModelApiStructType'
          timestamp: '#/components/schemas/TimestampType'
          union: '#/components/schemas/ModelApiUnionType'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AnyType'
      - $ref: '#/components/schemas/ModelApiArrayType'
      - $ref: '#/components/schemas/BooleanType'
      - $ref: '#/components/schemas/DateType'
      - $ref: '#/components/schemas/FloatType'
      - $ref: '#/components/schemas/IntegerType'
      - $ref: '#/components/schemas/ModelApiMapType'
      - $ref: '#/components/schemas/NullType'
      - $ref: '#/components/schemas/StringType'
      - $ref: '#/components/schemas/ModelApiStructType'
      - $ref: '#/components/schemas/TimestampType'
      - $ref: '#/components/schemas/ModelApiUnionType'
    ModelApiUnionType:
      properties:
        type:
          type: string
        unionTypes:
          items:
            $ref: '#/components/schemas/ModelApiType'
          type: array
      required:
      - type
      type: object
    ModifyObjectRule:
      properties:
        objectTypeApiName:
          $ref: '#/components/schemas/ObjectTypeApiName'
        type:
          type: string
      required:
      - objectTypeApiName
      - type
      type: object
    MultiLineString:
      properties:
        bbox:
          $ref: '#/components/schemas/BBox'
        coordinates:
          items:
            $ref: '#/components/schemas/LineStringCoordinates'
          type: array
        type:
          type: string
      required:
      - type
      type: object
    MultiPoint:
      properties:
        bbox:
          $ref: '#/components/schemas/BBox'
        coordinates:
          items:
            $ref: '#/components/schemas/Position'
          type: array
        type:
          type: string
      required:
      - type
      type: object
    MultiPolygon:
      properties:
        bbox:
          $ref: '#/components/schemas/BBox'
        coordinates:
          items:
            items:
              $ref: '#/components/schemas/LinearRing'
            type: array
          type: array
        type:
          type: string
      required:
      - type
      type: object
    MultipleGroupByOnFieldNotSupported:
      description: 'Aggregation cannot group by on the same field multiple times.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            duplicateFields:
              items:
                type: string
              type: array
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    MultiplePropertyValuesNotSupported:
      description: 'One of the requested property filters does not support multiple
        values. Please include only a single value for

        it.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            property:
              $ref: '#/components/schemas/PropertyApiName'
            propertyFilter:
              $ref: '#/components/schemas/PropertyFilter'
          required:
          - property
          - propertyFilter
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    NullType:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    ObjectAlreadyExists:
      description: 'The object the user is attempting to create already exists.

        '
      properties:
        errorCode:
          enum:
          - CONFLICT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ObjectChanged:
      description: 'An object used by this `Action` was changed by someone else while
        the `Action` was running.

        '
      properties:
        errorCode:
          enum:
          - CONFLICT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ObjectNotFound:
      description: The requested object is not found, or the client token does not
        have access to it.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            objectType:
              $ref: '#/components/schemas/ObjectTypeApiName'
            primaryKey:
              additionalProperties:
                $ref: '#/components/schemas/PrimaryKeyValue'
              type: object
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ObjectPropertyType:
      description: 'A union of all the types supported by Ontology Object properties.

        '
      discriminator:
        mapping:
          array: '#/components/schemas/OntologyObjectArrayType'
          attachment: '#/components/schemas/AttachmentType'
          boolean: '#/components/schemas/BooleanType'
          byte: '#/components/schemas/ByteType'
          date: '#/components/schemas/DateType'
          decimal: '#/components/schemas/DecimalType'
          double: '#/components/schemas/DoubleType'
          float: '#/components/schemas/FloatType'
          geopoint: '#/components/schemas/GeoPointType'
          geoshape: '#/components/schemas/GeoShapeType'
          integer: '#/components/schemas/IntegerType'
          long: '#/components/schemas/LongType'
          short: '#/components/schemas/ShortType'
          string: '#/components/schemas/StringType'
          timeseries: '#/components/schemas/TimeseriesType'
          timestamp: '#/components/schemas/TimestampType'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/OntologyObjectArrayType'
      - $ref: '#/components/schemas/AttachmentType'
      - $ref: '#/components/schemas/BooleanType'
      - $ref: '#/components/schemas/ByteType'
      - $ref: '#/components/schemas/DateType'
      - $ref: '#/components/schemas/DecimalType'
      - $ref: '#/components/schemas/DoubleType'
      - $ref: '#/components/schemas/FloatType'
      - $ref: '#/components/schemas/GeoPointType'
      - $ref: '#/components/schemas/GeoShapeType'
      - $ref: '#/components/schemas/IntegerType'
      - $ref: '#/components/schemas/LongType'
      - $ref: '#/components/schemas/ShortType'
      - $ref: '#/components/schemas/StringType'
      - $ref: '#/components/schemas/TimestampType'
      - $ref: '#/components/schemas/TimeseriesType'
    ObjectSetRid:
      type: string
    ObjectType:
      description: Represents an object type in the Ontology.
      properties:
        apiName:
          $ref: '#/components/schemas/ObjectTypeApiName'
        description:
          description: The description of the object type.
          type: string
        displayName:
          $ref: '#/components/schemas/DisplayName'
        primaryKey:
          description: The primary key of the object. This is a list of properties
            that can be used to uniquely identify the object.
          items:
            $ref: '#/components/schemas/PropertyApiName'
          type: array
        properties:
          additionalProperties:
            $ref: '#/components/schemas/Property'
          description: A map of the properties of the object type.
          type: object
        rid:
          $ref: '#/components/schemas/ObjectTypeRid'
        status:
          $ref: '#/components/schemas/ReleaseStatus'
        visibility:
          $ref: '#/components/schemas/ObjectTypeVisibility'
      required:
      - apiName
      - rid
      - status
      type: object
    ObjectTypeApiName:
      description: 'The name of the object type in the API in camelCase format. To
        find the API name for your Object Type, use the

        `List object types` endpoint or check the **Ontology Manager**.

        '
      type: string
    ObjectTypeNotFound:
      description: The requested object type is not found, or the client token does
        not have access to it.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            objectType:
              $ref: '#/components/schemas/ObjectTypeApiName'
            objectTypeRid:
              $ref: '#/components/schemas/ObjectTypeRid'
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ObjectTypeNotSynced:
      description: 'The requested object types are not synced into the ontology. Please
        reach out to your Ontology

        Administrator to re-index the object type in Ontology Management Application.

        '
      properties:
        errorCode:
          enum:
          - CONFLICT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            objectType:
              $ref: '#/components/schemas/ObjectTypeApiName'
          required:
          - objectType
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ObjectTypeRid:
      description: The unique resource identifier of an object type, useful for interacting
        with other Foundry APIs.
      type: string
    ObjectTypeV2:
      description: Represents an object type in the Ontology.
      properties:
        apiName:
          $ref: '#/components/schemas/ObjectTypeApiName'
        description:
          description: The description of the object type.
          type: string
        displayName:
          $ref: '#/components/schemas/DisplayName'
        primaryKey:
          $ref: '#/components/schemas/PropertyApiName'
        properties:
          additionalProperties:
            $ref: '#/components/schemas/PropertyV2'
          description: A map of the properties of the object type.
          type: object
        rid:
          $ref: '#/components/schemas/ObjectTypeRid'
        status:
          $ref: '#/components/schemas/ReleaseStatus'
        visibility:
          $ref: '#/components/schemas/ObjectTypeVisibility'
      required:
      - apiName
      - primaryKey
      - rid
      - status
      type: object
    ObjectTypeVisibility:
      description: The suggested visibility of the object type.
      enum:
      - NORMAL
      - PROMINENT
      - HIDDEN
      type: string
    ObjectTypeWithLink:
      properties:
        linkTypes:
          items:
            $ref: '#/components/schemas/LinkTypeSideV2'
          type: array
        objectType:
          $ref: '#/components/schemas/ObjectTypeV2'
      required:
      - objectType
      type: object
    ObjectsExceededLimit:
      description: 'There are more objects, but they cannot be returned by this API.
        Only 10,000 objects are available through this

        API for a given request.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    Ontology:
      description: Metadata about an Ontology.
      properties:
        apiName:
          $ref: '#/components/schemas/OntologyApiName'
        description:
          type: string
        displayName:
          $ref: '#/components/schemas/DisplayName'
        rid:
          $ref: '#/components/schemas/OntologyRid'
      required:
      - apiName
      - description
      - displayName
      - rid
      type: object
    OntologyApiName:
      type: string
    OntologyArrayType:
      properties:
        itemType:
          $ref: '#/components/schemas/OntologyDataType'
        type:
          type: string
      required:
      - itemType
      - type
      type: object
    OntologyDataType:
      description: 'A union of all the primitive types used by Palantir''s Ontology-based
        products.

        '
      discriminator:
        mapping:
          any: '#/components/schemas/AnyType'
          array: '#/components/schemas/OntologyArrayType'
          binary: '#/components/schemas/BinaryType'
          boolean: '#/components/schemas/BooleanType'
          byte: '#/components/schemas/ByteType'
          date: '#/components/schemas/DateType'
          decimal: '#/components/schemas/DecimalType'
          double: '#/components/schemas/DoubleType'
          float: '#/components/schemas/FloatType'
          integer: '#/components/schemas/IntegerType'
          long: '#/components/schemas/LongType'
          map: '#/components/schemas/OntologyMapType'
          object: '#/components/schemas/OntologyObjectType'
          objectSet: '#/components/schemas/OntologyObjectSetType'
          set: '#/components/schemas/OntologySetType'
          short: '#/components/schemas/ShortType'
          string: '#/components/schemas/StringType'
          struct: '#/components/schemas/OntologyStructType'
          timestamp: '#/components/schemas/TimestampType'
          unsupported: '#/components/schemas/UnsupportedType'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AnyType'
      - $ref: '#/components/schemas/BinaryType'
      - $ref: '#/components/schemas/BooleanType'
      - $ref: '#/components/schemas/ByteType'
      - $ref: '#/components/schemas/DateType'
      - $ref: '#/components/schemas/DecimalType'
      - $ref: '#/components/schemas/DoubleType'
      - $ref: '#/components/schemas/FloatType'
      - $ref: '#/components/schemas/IntegerType'
      - $ref: '#/components/schemas/LongType'
      - $ref: '#/components/schemas/ShortType'
      - $ref: '#/components/schemas/StringType'
      - $ref: '#/components/schemas/TimestampType'
      - $ref: '#/components/schemas/OntologyArrayType'
      - $ref: '#/components/schemas/OntologyMapType'
      - $ref: '#/components/schemas/OntologySetType'
      - $ref: '#/components/schemas/OntologyStructType'
      - $ref: '#/components/schemas/OntologyObjectType'
      - $ref: '#/components/schemas/OntologyObjectSetType'
      - $ref: '#/components/schemas/UnsupportedType'
    OntologyEditsExceededLimit:
      description: 'The number of edits to the Ontology exceeded the allowed limit.

        This may happen because of the request or because the Action is modifying
        too many objects.

        Please change the size of your request or contact the Ontology administrator.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            editsCount:
              type: integer
            editsLimit:
              type: integer
          required:
          - editsCount
          - editsLimit
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    OntologyFullMetadata:
      properties:
        actionTypes:
          additionalProperties:
            $ref: '#/components/schemas/ActionTypeV2'
          type: object
        objectTypes:
          additionalProperties:
            $ref: '#/components/schemas/ObjectTypeWithLink'
          type: object
        ontology:
          $ref: '#/components/schemas/OntologyV2'
        queryTypes:
          additionalProperties:
            $ref: '#/components/schemas/QueryTypeV2'
          type: object
      required:
      - ontology
      type: object
    OntologyIdentifier:
      description: Either an ontology rid or an ontology api name.
      type: string
    OntologyMapType:
      properties:
        keyType:
          $ref: '#/components/schemas/OntologyDataType'
        type:
          type: string
        valueType:
          $ref: '#/components/schemas/OntologyDataType'
      required:
      - keyType
      - type
      - valueType
      type: object
    OntologyNotFound:
      description: The requested Ontology is not found, or the client token does not
        have access to it.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            apiName:
              $ref: '#/components/schemas/OntologyApiName'
            ontologyRid:
              $ref: '#/components/schemas/OntologyRid'
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    OntologyObjectArrayType:
      properties:
        subType:
          $ref: '#/components/schemas/ObjectPropertyType'
        type:
          type: string
      required:
      - subType
      - type
      type: object
    OntologyObjectSetType:
      properties:
        objectApiName:
          $ref: '#/components/schemas/ObjectTypeApiName'
        objectTypeApiName:
          $ref: '#/components/schemas/ObjectTypeApiName'
        type:
          type: string
      required:
      - type
      type: object
    OntologyObjectType:
      properties:
        objectApiName:
          $ref: '#/components/schemas/ObjectTypeApiName'
        objectTypeApiName:
          $ref: '#/components/schemas/ObjectTypeApiName'
        type:
          type: string
      required:
      - objectApiName
      - objectTypeApiName
      - type
      type: object
    OntologyRid:
      description: 'The unique Resource Identifier (RID) of the Ontology. To look
        up your Ontology RID, please use the

        `List ontologies` endpoint or check the **Ontology Manager**.

        '
      type: string
    OntologySetType:
      properties:
        itemType:
          $ref: '#/components/schemas/OntologyDataType'
        type:
          type: string
      required:
      - itemType
      - type
      type: object
    OntologyStructField:
      properties:
        fieldType:
          $ref: '#/components/schemas/OntologyDataType'
        name:
          $ref: '#/components/schemas/StructFieldName'
        required:
          type: boolean
      required:
      - fieldType
      - name
      - required
      type: object
    OntologyStructType:
      properties:
        fields:
          items:
            $ref: '#/components/schemas/OntologyStructField'
          type: array
        type:
          type: string
      required:
      - type
      type: object
    OntologySyncing:
      description: 'The requested object type has been changed in the **Ontology Manager**
        and changes are currently being applied. Wait a

        few seconds and try again.

        '
      properties:
        errorCode:
          enum:
          - CONFLICT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            objectType:
              $ref: '#/components/schemas/ObjectTypeApiName'
          required:
          - objectType
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    OntologyV2:
      description: Metadata about an Ontology.
      properties:
        apiName:
          $ref: '#/components/schemas/OntologyApiName'
        description:
          type: string
        displayName:
          $ref: '#/components/schemas/DisplayName'
        rid:
          $ref: '#/components/schemas/OntologyRid'
      required:
      - apiName
      - description
      - displayName
      - rid
      type: object
    OpenTransactionAlreadyExists:
      description: A transaction is already open on this dataset and branch. A branch
        of a dataset can only have one open transaction at a time.
      properties:
        errorCode:
          enum:
          - CONFLICT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            branchId:
              $ref: '#/components/schemas/BranchId'
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
          required:
          - branchId
          - datasetRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    OperationNotFound:
      description: The operation is not found, or the user does not have access to
        it.
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            id:
              type: string
          required:
          - id
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    PageSize:
      description: The page size to use for the endpoint.
      type: integer
    PageToken:
      description: 'The page token indicates where to start paging. This should be
        omitted from the first page''s request.

        To fetch the next page, clients should take the value from the `nextPageToken`
        field of the previous response

        and populate the next request''s `pageToken` field with it.

        '
      type: string
    Parameter:
      description: Details about a parameter of an action or query.
      properties:
        baseType:
          $ref: '#/components/schemas/ValueType'
        dataType:
          $ref: '#/components/schemas/OntologyDataType'
        description:
          type: string
        required:
          type: boolean
      required:
      - baseType
      - required
      type: object
    ParameterId:
      description: 'The unique identifier of the parameter. Parameters are used as
        inputs when an action or query is applied.

        Parameters can be viewed and managed in the **Ontology Manager**.

        '
      type: string
    ParameterObjectNotFound:
      description: 'The parameter object reference or parameter default value is not
        found, or the client token does not have access to it.

        '
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            objectType:
              $ref: '#/components/schemas/ObjectTypeApiName'
            primaryKey:
              additionalProperties:
                $ref: '#/components/schemas/PrimaryKeyValue'
              type: object
          required:
          - objectType
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ParameterObjectSetRidNotFound:
      description: 'The parameter object set RID is not found, or the client token
        does not have access to it.

        '
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            objectSetRid:
              $ref: '#/components/schemas/ObjectSetRid'
          required:
          - objectSetRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ParameterTypeNotSupported:
      description: 'The type of the requested parameter is not currently supported
        by this API. If you need support for this,

        please reach out to Palantir Support.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            parameterBaseType:
              $ref: '#/components/schemas/ValueType'
            parameterId:
              $ref: '#/components/schemas/ParameterId'
          required:
          - parameterBaseType
          - parameterId
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ParametersNotFound:
      description: 'The provided parameter ID was not found for the action. Please
        look at the `configuredParameterIds` field

        to see which ones are available.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            actionType:
              $ref: '#/components/schemas/ActionTypeApiName'
            configuredParameterIds:
              items:
                $ref: '#/components/schemas/ParameterId'
              type: array
            unknownParameterIds:
              items:
                $ref: '#/components/schemas/ParameterId'
              type: array
          required:
          - actionType
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ParentAttachmentPermissionDenied:
      description: 'The user does not have permission to parent attachments.

        '
      properties:
        errorCode:
          enum:
          - PERMISSION_DENIED
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    Polygon:
      properties:
        bbox:
          $ref: '#/components/schemas/BBox'
        coordinates:
          items:
            $ref: '#/components/schemas/LinearRing'
          type: array
        type:
          type: string
      required:
      - type
      type: object
    Position:
      description: 'GeoJSon fundamental geometry construct.


        A position is an array of numbers. There MUST be two or more elements.

        The first two elements are longitude and latitude, precisely in that order
        and using decimal numbers.

        Altitude or elevation MAY be included as an optional third element.


        Implementations SHOULD NOT extend positions beyond three elements

        because the semantics of extra elements are unspecified and ambiguous.

        Historically, some implementations have used a fourth element to carry

        a linear referencing measure (sometimes denoted as "M") or a numerical

        timestamp, but in most situations a parser will not be able to properly

        interpret these values. The interpretation and meaning of additional

        elements is beyond the scope of this specification, and additional

        elements MAY be ignored by parsers.

        '
      items:
        $ref: '#/components/schemas/Coordinate'
      maxItems: 3
      minItems: 2
      type: array
    PreviewMode:
      description: Enables the use of preview functionality.
      type: boolean
    PrimaryKeyValue:
      description: Represents the primary key value that is used as a unique identifier
        for an object.
    PropertiesNotFilterable:
      description: 'Results could not be filtered by the requested properties. Please
        mark the properties as *Searchable* and

        *Selectable* in the **Ontology Manager** to be able to filter on those properties.
        There may be a short delay

        between the time a property is marked *Searchable* and *Selectable* and when
        it can be used.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            properties:
              items:
                $ref: '#/components/schemas/PropertyApiName'
              type: array
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    PropertiesNotFound:
      description: The requested properties are not found on the object type.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            objectType:
              $ref: '#/components/schemas/ObjectTypeApiName'
            properties:
              items:
                $ref: '#/components/schemas/PropertyApiName'
              type: array
          required:
          - objectType
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    PropertiesNotSearchable:
      description: 'Search is not enabled on the specified properties. Please mark
        the properties as *Searchable*

        in the **Ontology Manager** to enable search on them. There may be a short
        delay

        between the time a property is marked *Searchable* and when it can be used.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            propertyApiNames:
              items:
                $ref: '#/components/schemas/PropertyApiName'
              type: array
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    PropertiesNotSortable:
      description: 'Results could not be ordered by the requested properties. Please
        mark the properties as *Searchable* and

        *Sortable* in the **Ontology Manager** to enable their use in `orderBy` parameters.
        There may be a short delay

        between the time a property is set to *Searchable* and *Sortable* and when
        it can be used.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            properties:
              items:
                $ref: '#/components/schemas/PropertyApiName'
              type: array
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    Property:
      description: Details about some property of an object.
      properties:
        baseType:
          $ref: '#/components/schemas/ValueType'
        description:
          type: string
        displayName:
          $ref: '#/components/schemas/DisplayName'
      required:
      - baseType
      type: object
    PropertyApiName:
      description: 'The name of the property in the API. To find the API name for
        your property, use the `Get object type`

        endpoint or check the **Ontology Manager**.

        '
      type: string
    PropertyApiNameNotFound:
      description: 'A property that was required to have an API name, such as a primary
        key, is missing one. You can set an API

        name for it using the **Ontology Manager**.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            propertyBaseType:
              $ref: '#/components/schemas/ValueType'
            propertyId:
              $ref: '#/components/schemas/PropertyId'
          required:
          - propertyBaseType
          - propertyId
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    PropertyBaseTypeNotSupported:
      description: 'The type of the requested property is not currently supported
        by this API. If you need support for this,

        please reach out to Palantir Support.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            objectType:
              $ref: '#/components/schemas/ObjectTypeApiName'
            property:
              $ref: '#/components/schemas/PropertyApiName'
            propertyBaseType:
              $ref: '#/components/schemas/ValueType'
          required:
          - objectType
          - property
          - propertyBaseType
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    PropertyFilter:
      description: "Represents a filter used on properties.\n\nEndpoints that accept\
        \ this supports optional parameters that have the form:\n`properties.{propertyApiName}.{propertyFilter}={propertyValueEscapedString}`\
        \ to filter the returned objects.\nFor instance, you may use `properties.firstName.eq=John`\
        \ to find objects that contain a property called\n\"firstName\" that has the\
        \ exact value of \"John\".\n\nThe following are a list of supported property\
        \ filters:\n\n- `properties.{propertyApiName}.contains` - supported on arrays\
        \ and can be used to filter array properties\n  that have at least one of\
        \ the provided values. If multiple query parameters are provided, then objects\n\
        \  that have any of the given values for the specified property will be matched.\n\
        - `properties.{propertyApiName}.eq` - used to filter objects that have the\
        \ exact value for the provided\n  property. If multiple query parameters are\
        \ provided, then objects that have any of the given values\n  will be matched.\
        \ For instance, if the user provides a request by doing\n  `?properties.firstName.eq=John&properties.firstName.eq=Anna`,\
        \ then objects that have a firstName property\n  of either John or Anna will\
        \ be matched. This filter is supported on all property types except Arrays.\n\
        - `properties.{propertyApiName}.neq` - used to filter objects that do not\
        \ have the provided property values.\n  Similar to the `eq` filter, if multiple\
        \ values are provided, then objects that have any of the given values\n  will\
        \ be excluded from the result.\n- `properties.{propertyApiName}.lt`, `properties.{propertyApiName}.lte`,\
        \ `properties.{propertyApiName}.gt`\n  `properties.{propertyApiName}.gte`\
        \ - represent less than, less than or equal to, greater than, and greater\n\
        \  than or equal to respectively. These are supported on date, timestamp,\
        \ byte, integer, long, double, decimal.\n- `properties.{propertyApiName}.isNull`\
        \ - used to filter objects where the provided property is (or is not) null.\n\
        \  This filter is supported on all property types.\n"
      type: string
    PropertyFiltersNotSupported:
      description: 'At least one of the requested property filters are not supported.
        See the documentation of `PropertyFilter` for

        a list of supported property filters.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            property:
              $ref: '#/components/schemas/PropertyApiName'
            propertyFilters:
              items:
                $ref: '#/components/schemas/PropertyFilter'
              type: array
          required:
          - property
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    PropertyId:
      description: 'The immutable ID of a property. Property IDs are only used to
        identify properties in the **Ontology Manager**

        application and assign them API names. In every other case, API names should
        be used instead of property IDs.

        '
      type: string
    PropertyTypesSearchNotSupported:
      description: 'The search on the property types are not supported. See the `Search
        Objects` documentation for

        a list of supported search queries on different property types.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            parameters:
              additionalProperties:
                items:
                  $ref: '#/components/schemas/PropertyApiName'
                type: array
              type: object
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    PropertyV2:
      description: Details about some property of an object.
      properties:
        dataType:
          $ref: '#/components/schemas/ObjectPropertyType'
        description:
          type: string
        displayName:
          $ref: '#/components/schemas/DisplayName'
      required:
      - dataType
      type: object
    PropertyValue:
      description: 'Represents the value of a property in the following format.


        | Type       | JSON encoding                                         | Example                                                                                            |

        |----------- |-------------------------------------------------------|----------------------------------------------------------------------------------------------------|

        | Array      | array                                                 | `["alpha",
        "bravo", "charlie"]`                                                                    |

        | Attachment | JSON encoded `AttachmentProperty` object              | `{"rid":"ri.blobster.main.attachment.2f944bae-5851-4204-8615-920c969a9f2e"}`                       |

        | Boolean    | boolean                                               | `true`                                                                                             |

        | Byte       | number                                                | `31`                                                                                               |

        | Date       | ISO 8601 extended local date string                   | `"2021-05-01"`                                                                                     |

        | Decimal    | string                                                | `"2.718281828"`                                                                                    |

        | Double     | number                                                | `3.14159265`                                                                                       |

        | Float      | number                                                | `3.14159265`                                                                                       |

        | GeoPoint   | geojson                                               | `{"type":"Point","coordinates":[102.0,0.5]}`                                                       |

        | GeoShape   | geojson                                               | `{"type":"LineString","coordinates":[[102.0,0.0],[103.0,1.0],[104.0,0.0],[105.0,1.0]]}`            |

        | Integer    | number                                                | `238940`                                                                                           |

        | Long       | string                                                | `"58319870951433"`                                                                                 |

        | Short      | number                                                | `8739`                                                                                             |

        | String     | string                                                | `"Call
        me Ishmael"`                                                                                |

        | Timestamp  | ISO 8601 extended offset date-time string in UTC zone | `"2021-01-04T05:00:00Z"`                                                                           |

        '
    PutSchemaPermissionDenied:
      description: todo
      properties:
        errorCode:
          enum:
          - PERMISSION_DENIED
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            branchId:
              $ref: '#/components/schemas/BranchId'
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
          required:
          - branchId
          - datasetRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    QueryAggregationKeyType:
      description: 'A union of all the types supported by query aggregation keys.

        '
      discriminator:
        mapping:
          boolean: '#/components/schemas/BooleanType'
          date: '#/components/schemas/DateType'
          double: '#/components/schemas/DoubleType'
          integer: '#/components/schemas/IntegerType'
          range: '#/components/schemas/QueryAggregationRangeType'
          string: '#/components/schemas/StringType'
          timestamp: '#/components/schemas/TimestampType'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/BooleanType'
      - $ref: '#/components/schemas/DateType'
      - $ref: '#/components/schemas/DoubleType'
      - $ref: '#/components/schemas/IntegerType'
      - $ref: '#/components/schemas/StringType'
      - $ref: '#/components/schemas/TimestampType'
      - $ref: '#/components/schemas/QueryAggregationRangeType'
    QueryAggregationRangeSubType:
      description: 'A union of all the types supported by query aggregation ranges.

        '
      discriminator:
        mapping:
          date: '#/components/schemas/DateType'
          double: '#/components/schemas/DoubleType'
          integer: '#/components/schemas/IntegerType'
          timestamp: '#/components/schemas/TimestampType'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DateType'
      - $ref: '#/components/schemas/DoubleType'
      - $ref: '#/components/schemas/IntegerType'
      - $ref: '#/components/schemas/TimestampType'
    QueryAggregationRangeType:
      properties:
        subType:
          $ref: '#/components/schemas/QueryAggregationRangeSubType'
        type:
          type: string
      required:
      - subType
      - type
      type: object
    QueryAggregationValueType:
      description: 'A union of all the types supported by query aggregation keys.

        '
      discriminator:
        mapping:
          date: '#/components/schemas/DateType'
          double: '#/components/schemas/DoubleType'
          timestamp: '#/components/schemas/TimestampType'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DateType'
      - $ref: '#/components/schemas/DoubleType'
      - $ref: '#/components/schemas/TimestampType'
    QueryApiName:
      description: 'The name of the Query in the API.

        '
      type: string
    QueryArrayType:
      properties:
        subType:
          $ref: '#/components/schemas/QueryDataType'
        type:
          type: string
      required:
      - subType
      - type
      type: object
    QueryDataType:
      description: 'A union of all the types supported by Ontology Query parameters
        or outputs.

        '
      discriminator:
        mapping:
          array: '#/components/schemas/QueryArrayType'
          attachment: '#/components/schemas/AttachmentType'
          boolean: '#/components/schemas/BooleanType'
          date: '#/components/schemas/DateType'
          double: '#/components/schemas/DoubleType'
          float: '#/components/schemas/FloatType'
          integer: '#/components/schemas/IntegerType'
          long: '#/components/schemas/LongType'
          'null': '#/components/schemas/NullType'
          object: '#/components/schemas/OntologyObjectType'
          objectSet: '#/components/schemas/OntologyObjectSetType'
          set: '#/components/schemas/QuerySetType'
          string: '#/components/schemas/StringType'
          struct: '#/components/schemas/QueryStructType'
          threeDimensionalAggregation: '#/components/schemas/ThreeDimensionalAggregation'
          timestamp: '#/components/schemas/TimestampType'
          twoDimensionalAggregation: '#/components/schemas/TwoDimensionalAggregation'
          union: '#/components/schemas/QueryUnionType'
          unsupported: '#/components/schemas/UnsupportedType'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/QueryArrayType'
      - $ref: '#/components/schemas/AttachmentType'
      - $ref: '#/components/schemas/BooleanType'
      - $ref: '#/components/schemas/DateType'
      - $ref: '#/components/schemas/DoubleType'
      - $ref: '#/components/schemas/FloatType'
      - $ref: '#/components/schemas/IntegerType'
      - $ref: '#/components/schemas/LongType'
      - $ref: '#/components/schemas/OntologyObjectSetType'
      - $ref: '#/components/schemas/OntologyObjectType'
      - $ref: '#/components/schemas/QuerySetType'
      - $ref: '#/components/schemas/StringType'
      - $ref: '#/components/schemas/QueryStructType'
      - $ref: '#/components/schemas/ThreeDimensionalAggregation'
      - $ref: '#/components/schemas/TimestampType'
      - $ref: '#/components/schemas/TwoDimensionalAggregation'
      - $ref: '#/components/schemas/QueryUnionType'
      - $ref: '#/components/schemas/NullType'
      - $ref: '#/components/schemas/UnsupportedType'
    QueryEncounteredUserFacingError:
      description: 'The authored `Query` failed to execute because of a user induced
        error. The message argument

        is meant to be displayed to the user.

        '
      properties:
        errorCode:
          enum:
          - CONFLICT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            functionRid:
              $ref: '#/components/schemas/FunctionRid'
            functionVersion:
              $ref: '#/components/schemas/FunctionVersion'
            message:
              type: string
          required:
          - functionRid
          - functionVersion
          - message
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    QueryMemoryExceededLimit:
      description: 'Memory limits were exceeded for the `Query` execution.

        '
      properties:
        errorCode:
          enum:
          - TIMEOUT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            functionRid:
              $ref: '#/components/schemas/FunctionRid'
            functionVersion:
              $ref: '#/components/schemas/FunctionVersion'
          required:
          - functionRid
          - functionVersion
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    QueryNotFound:
      description: The query is not found, or the user does not have access to it.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            query:
              $ref: '#/components/schemas/QueryApiName'
          required:
          - query
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    QueryParameterV2:
      description: Details about a parameter of a query.
      properties:
        dataType:
          $ref: '#/components/schemas/QueryDataType'
        description:
          type: string
      required:
      - dataType
      type: object
    QuerySetType:
      properties:
        subType:
          $ref: '#/components/schemas/QueryDataType'
        type:
          type: string
      required:
      - subType
      - type
      type: object
    QueryStructField:
      properties:
        fieldType:
          $ref: '#/components/schemas/QueryDataType'
        name:
          $ref: '#/components/schemas/StructFieldName'
      required:
      - fieldType
      - name
      type: object
    QueryStructType:
      properties:
        fields:
          items:
            $ref: '#/components/schemas/QueryStructField'
          type: array
        type:
          type: string
      required:
      - type
      type: object
    QueryTimeExceededLimit:
      description: 'Time limits were exceeded for the `Query` execution.

        '
      properties:
        errorCode:
          enum:
          - TIMEOUT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            functionRid:
              $ref: '#/components/schemas/FunctionRid'
            functionVersion:
              $ref: '#/components/schemas/FunctionVersion'
          required:
          - functionRid
          - functionVersion
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    QueryType:
      description: Represents a query type in the Ontology.
      properties:
        apiName:
          $ref: '#/components/schemas/QueryApiName'
        description:
          type: string
        displayName:
          $ref: '#/components/schemas/DisplayName'
        output:
          $ref: '#/components/schemas/OntologyDataType'
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/Parameter'
          type: object
        rid:
          $ref: '#/components/schemas/FunctionRid'
        version:
          $ref: '#/components/schemas/FunctionVersion'
      required:
      - apiName
      - rid
      - version
      type: object
    QueryTypeV2:
      description: Represents a query type in the Ontology.
      properties:
        apiName:
          $ref: '#/components/schemas/QueryApiName'
        description:
          type: string
        displayName:
          $ref: '#/components/schemas/DisplayName'
        output:
          $ref: '#/components/schemas/QueryDataType'
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/QueryParameterV2'
          type: object
        rid:
          $ref: '#/components/schemas/FunctionRid'
        version:
          $ref: '#/components/schemas/FunctionVersion'
      required:
      - apiName
      - output
      - rid
      - version
      type: object
    QueryUnionType:
      properties:
        type:
          type: string
        unionTypes:
          items:
            $ref: '#/components/schemas/QueryDataType'
          type: array
      required:
      - type
      type: object
    ReadTablePermissionDenied:
      description: The provided token does not have permission to read the given dataset
        as a table.
      properties:
        errorCode:
          enum:
          - PERMISSION_DENIED
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
          required:
          - datasetRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ReleaseStatus:
      description: The release status of the entity.
      enum:
      - ACTIVE
      - EXPERIMENTAL
      - DEPRECATED
      type: string
    ResourceNameAlreadyExists:
      description: The provided resource name is already in use by another resource
        in the same folder.
      properties:
        errorCode:
          enum:
          - CONFLICT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            parentFolderRid:
              $ref: '#/components/schemas/FolderRid'
            resourceName:
              type: string
          required:
          - parentFolderRid
          - resourceName
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ReturnEditsMode:
      enum:
      - ALL
      - NONE
      type: string
    SchemaNotFound:
      description: A schema could not be found for the given dataset and branch, or
        the client token does not have access to it.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            branchId:
              $ref: '#/components/schemas/BranchId'
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
            transactionRid:
              $ref: '#/components/schemas/TransactionRid'
          required:
          - branchId
          - datasetRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    SdkPackageName:
      type: string
    ShortType:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    StringType:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    StructFieldName:
      description: 'The name of a field in a `Struct`.

        '
      type: string
    TableExportFormat:
      description: 'Format for tabular dataset export.

        '
      enum:
      - ARROW
      - CSV
      type: string
    ThreeDimensionalAggregation:
      properties:
        keyType:
          $ref: '#/components/schemas/QueryAggregationKeyType'
        type:
          type: string
        valueType:
          $ref: '#/components/schemas/TwoDimensionalAggregation'
      required:
      - keyType
      - type
      - valueType
      type: object
    TimeSeriesItemType:
      description: 'A union of the types supported by time series properties.

        '
      discriminator:
        mapping:
          double: '#/components/schemas/DoubleType'
          string: '#/components/schemas/StringType'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DoubleType'
      - $ref: '#/components/schemas/StringType'
    TimeseriesType:
      properties:
        itemType:
          $ref: '#/components/schemas/TimeSeriesItemType'
        type:
          type: string
      required:
      - itemType
      - type
      type: object
    TimestampType:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    Transaction:
      description: 'An operation that modifies the files within a dataset.

        '
      properties:
        closedTime:
          description: The timestamp when the transaction was closed, in ISO 8601
            timestamp format.
          format: date-time
          type: string
        createdTime:
          description: The timestamp when the transaction was created, in ISO 8601
            timestamp format.
          format: date-time
          type: string
        rid:
          $ref: '#/components/schemas/TransactionRid'
        status:
          $ref: '#/components/schemas/TransactionStatus'
        transactionType:
          $ref: '#/components/schemas/TransactionType'
      required:
      - createdTime
      - rid
      - status
      - transactionType
      type: object
    TransactionNotCommitted:
      description: The given transaction has not been committed.
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
            transactionRid:
              $ref: '#/components/schemas/TransactionRid'
            transactionStatus:
              $ref: '#/components/schemas/TransactionStatus'
          required:
          - datasetRid
          - transactionRid
          - transactionStatus
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    TransactionNotFound:
      description: The requested transaction could not be found on the dataset, or
        the client token does not have access to it.
      properties:
        errorCode:
          enum:
          - NOT_FOUND
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
            transactionRid:
              $ref: '#/components/schemas/TransactionRid'
          required:
          - datasetRid
          - transactionRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    TransactionNotOpen:
      description: The given transaction is not open.
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
            transactionRid:
              $ref: '#/components/schemas/TransactionRid'
            transactionStatus:
              $ref: '#/components/schemas/TransactionStatus'
          required:
          - datasetRid
          - transactionRid
          - transactionStatus
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    TransactionRid:
      description: 'The Resource Identifier (RID) of a Transaction. Example: `ri.foundry.main.transaction.0a0207cb-26b7-415b-bc80-66a3aa3933f4`.

        '
      type: string
    TransactionStatus:
      description: 'The status of a Transaction.

        '
      enum:
      - ABORTED
      - COMMITTED
      - OPEN
      type: string
    TransactionType:
      description: 'The type of a Transaction.

        '
      enum:
      - APPEND
      - UPDATE
      - SNAPSHOT
      - DELETE
      type: string
    TwoDimensionalAggregation:
      properties:
        keyType:
          $ref: '#/components/schemas/QueryAggregationKeyType'
        type:
          type: string
        valueType:
          $ref: '#/components/schemas/QueryAggregationValueType'
      required:
      - keyType
      - type
      - valueType
      type: object
    UnknownDistanceUnit:
      description: An unknown distance unit was provided.
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            knownUnits:
              items:
                $ref: '#/components/schemas/DistanceUnit'
              type: array
            unknownUnit:
              type: string
          required:
          - unknownUnit
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    UnknownParameter:
      description: 'The provided parameters were not found. Please look at the `knownParameters`
        field

        to see which ones are available.

        '
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            expectedParameters:
              items:
                $ref: '#/components/schemas/ParameterId'
              type: array
            unknownParameters:
              items:
                $ref: '#/components/schemas/ParameterId'
              type: array
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    UnsupportedObjectSet:
      description: The requested object set is not supported.
      properties:
        errorCode:
          enum:
          - INVALID_ARGUMENT
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    UnsupportedType:
      properties:
        type:
          type: string
        unsupportedType:
          type: string
      required:
      - type
      - unsupportedType
      type: object
    UploadFilePermissionDenied:
      description: The provided token does not have permission to upload the given
        file to the given dataset and transaction.
      properties:
        errorCode:
          enum:
          - PERMISSION_DENIED
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            datasetRid:
              $ref: '#/components/schemas/DatasetRid'
            path:
              $ref: '#/components/schemas/FilePath'
            transactionRid:
              $ref: '#/components/schemas/TransactionRid'
          required:
          - datasetRid
          - path
          - transactionRid
          type: object
      required:
      - errorName
      - errorCode
      - parameters
    ValueType:
      description: 'A string indicating the type of each data value. Note that these
        types can be nested, for example an array of

        structs.


        | Type                | JSON value                                                                                                        |

        |---------------------|-------------------------------------------------------------------------------------------------------------------|

        | Array               | `Array<T>`, where `T` is the type of the array elements,
        e.g. `Array<String>`.                                    |

        | Attachment          | `Attachment`                                                                                                      |

        | Boolean             | `Boolean`                                                                                                         |

        | Byte                | `Byte`                                                                                                            |

        | Date                | `LocalDate`                                                                                                       |

        | Decimal             | `Decimal`                                                                                                         |

        | Double              | `Double`                                                                                                          |

        | Float               | `Float`                                                                                                           |

        | Integer             | `Integer`                                                                                                         |

        | Long                | `Long`                                                                                                            |

        | OntologyObject      | `OntologyObject<T>` where `T` is the API name of the
        referenced object type.                                      |

        | Short               | `Short`                                                                                                           |

        | String              | `String`                                                                                                          |

        | Struct              | `Struct<T>` where `T` contains field name and type
        pairs, e.g. `Struct<{ firstName: String, lastName: string }>`  |

        | Timeseries          | `TimeSeries<T>` where `T` is either `String` for an
        enum series or `Double` for a numeric series.                 |

        | Timestamp           | `Timestamp`                                                                                                       |

        '
      type: string
    ViewObjectPermissionDenied:
      description: 'The user does not have permission to view objects of this `ObjectType`.

        '
      properties:
        errorCode:
          enum:
          - PERMISSION_DENIED
          type: string
        errorInstanceId:
          format: uuid
          type: string
        errorName:
          type: string
        parameters:
          properties:
            objectType:
              $ref: '#/components/schemas/ObjectTypeApiName'
          required:
          - objectType
          type: object
      required:
      - errorName
      - errorCode
      - parameters
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http
externalDocs:
  description: API Documentation
  url: https://www.palantir.com/docs
info:
  description: The Palantir REST API. Please see https://www.palantir.com/docs for
    more details.
  title: Palantir OpenAPI
  version: 1.738.0
openapi: 3.0.1
paths:
  /v1/datasets:
    post:
      description: 'Creates a new Dataset. A default branch - `master` for most enrollments
        - will be created on the Dataset.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:datasets-write`.

        '
      operationId: createDataset
      parameters: []
      requestBody:
        content:
          application/json:
            example:
              name: My Dataset
              parentFolderRid: ri.foundry.main.folder.bfe58487-4c56-4c58-aba7-25defd6163c4
            schema:
              $ref: '#/components/schemas/CreateDatasetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                path: /Empyrean Airlines/My Important Project/My Dataset
                rid: ri.foundry.main.dataset.c26f11c8-cdb3-4f44-9f5d-9816ea1c82da
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
      security:
      - BearerAuth: []
      tags:
      - DatasetsApiService
  /v1/datasets/{datasetRid}:
    get:
      description: 'Gets the Dataset with the given DatasetRid.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:datasets-read`.

        '
      operationId: getDataset
      parameters:
      - example: ri.foundry.main.dataset.c26f11c8-cdb3-4f44-9f5d-9816ea1c82da
        in: path
        name: datasetRid
        required: true
        schema:
          $ref: '#/components/schemas/DatasetRid'
      responses:
        '200':
          content:
            application/json:
              example:
                name: My Dataset
                parentFolderRid: ri.foundry.main.folder.bfe58487-4c56-4c58-aba7-25defd6163c4
                rid: ri.foundry.main.dataset.c26f11c8-cdb3-4f44-9f5d-9816ea1c82da
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
      security:
      - BearerAuth: []
      tags:
      - DatasetsApiService
  /v1/datasets/{datasetRid}/branches:
    get:
      description: 'Lists the Branches of a Dataset.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:datasets-read`.

        '
      operationId: listBranches
      parameters:
      - description: The Resource Identifier (RID) of the Dataset on which to list
          Branches.
        example: ri.foundry.main.dataset.c26f11c8-cdb3-4f44-9f5d-9816ea1c82da
        in: path
        name: datasetRid
        required: true
        schema:
          $ref: '#/components/schemas/DatasetRid'
      - description: 'The desired size of the page to be returned. Defaults to 1,000.

          See [page sizes](/docs/foundry/api/general/overview/paging/#page-sizes)
          for details.

          '
        in: query
        name: pageSize
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - in: query
        name: pageToken
        required: false
        schema:
          $ref: '#/components/schemas/PageToken'
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - branchId: master
                  transactionRid: ri.foundry.main.transaction.0a0207cb-26b7-415b-bc80-66a3aa3933f4
                - branchId: test-v2
                  transactionRid: ri.foundry.main.transaction.fc9feb4b-34e4-4bfd-9e4f-b6425fbea85f
                - branchId: my-branch
                nextPageToken: v1.VGhlcmUgaXMgc28gbXVjaCBsZWZ0IHRvIGJ1aWxkIC0gcGFsYW50aXIuY29tL2NhcmVlcnMv
              schema:
                $ref: '#/components/schemas/ListBranchesResponse'
          description: ''
      security:
      - BearerAuth: []
      tags:
      - DatasetsApiService
    post:
      description: 'Creates a branch on an existing dataset. A branch may optionally
        point to a (committed) transaction.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:datasets-write`.

        '
      operationId: createBranch
      parameters:
      - description: The Resource Identifier (RID) of the Dataset on which to create
          the Branch.
        example: ri.foundry.main.dataset.c26f11c8-cdb3-4f44-9f5d-9816ea1c82da
        in: path
        name: datasetRid
        required: true
        schema:
          $ref: '#/components/schemas/DatasetRid'
      requestBody:
        content:
          application/json:
            example:
              branchId: my-branch
            schema:
              $ref: '#/components/schemas/CreateBranchRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                branchId: my-branch
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
      security:
      - BearerAuth: []
      tags:
      - DatasetsApiService
  /v1/datasets/{datasetRid}/branches/{branchId}:
    delete:
      description: 'Deletes the Branch with the given BranchId.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:datasets-write`.

        '
      operationId: deleteBranch
      parameters:
      - description: The Resource Identifier (RID) of the Dataset that contains the
          Branch.
        example: ri.foundry.main.dataset.c26f11c8-cdb3-4f44-9f5d-9816ea1c82da
        in: path
        name: datasetRid
        required: true
        schema:
          $ref: '#/components/schemas/DatasetRid'
      - description: The identifier (name) of the Branch.
        example: my-branch
        in: path
        name: branchId
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        '204':
          description: Branch deleted.
      security:
      - BearerAuth: []
      tags:
      - DatasetsApiService
    get:
      description: 'Get a Branch of a Dataset.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:datasets-read`.

        '
      operationId: getBranch
      parameters:
      - description: The Resource Identifier (RID) of the Dataset that contains the
          Branch.
        example: ri.foundry.main.dataset.c26f11c8-cdb3-4f44-9f5d-9816ea1c82da
        in: path
        name: datasetRid
        required: true
        schema:
          $ref: '#/components/schemas/DatasetRid'
      - description: The identifier (name) of the Branch.
        example: master
        in: path
        name: branchId
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        '200':
          content:
            application/json:
              example:
                branchId: master
                transactionRid: ri.foundry.main.transaction.0a0207cb-26b7-415b-bc80-66a3aa3933f4
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
      security:
      - BearerAuth: []
      tags:
      - DatasetsApiService
  /v1/datasets/{datasetRid}/files:
    get:
      description: "Lists Files contained in a Dataset. By default files are listed\
        \ on the latest view of the default \nbranch - `master` for most enrollments.\n\
        \n#### Advanced Usage\n\nSee [Datasets Core Concepts](/docs/foundry/data-integration/datasets/)\
        \ for details on using branches and transactions.\n\nTo **list files on a\
        \ specific Branch** specify the Branch's identifier as `branchId`. This will\
        \ include the most\nrecent version of all files since the latest snapshot\
        \ transaction, or the earliest ancestor transaction of the \nbranch if there\
        \ are no snapshot transactions.\n\nTo **list files on the resolved view of\
        \ a transaction** specify the Transaction's resource identifier\nas `endTransactionRid`.\
        \ This will include the most recent version of all files since the latest\
        \ snapshot\ntransaction, or the earliest ancestor transaction if there are\
        \ no snapshot transactions.\n\nTo **list files on the resolved view of a range\
        \ of transactions** specify the the start transaction's resource\nidentifier\
        \ as `startTransactionRid` and the end transaction's resource identifier as\
        \ `endTransactionRid`. This\nwill include the most recent version of all files\
        \ since the `startTransactionRid` up to the `endTransactionRid`.\nNote that\
        \ an intermediate snapshot transaction will remove all files from the view.\
        \ Behavior is undefined when \nthe start and end transactions do not belong\
        \ to the same root-to-leaf path.\n\nTo **list files on a specific transaction**\
        \ specify the Transaction's resource identifier as both the \n`startTransactionRid`\
        \ and `endTransactionRid`. This will include only files that were modified\
        \ as part of that\nTransaction.\n\nThird-party applications using this endpoint\
        \ via OAuth2 must request the following operation scope: `api:datasets-read`.\n"
      operationId: listFiles
      parameters:
      - description: The Resource Identifier (RID) of the Dataset on which to list
          Files.
        in: path
        name: datasetRid
        required: true
        schema:
          $ref: '#/components/schemas/DatasetRid'
      - description: The identifier (name) of the Branch on which to list Files. Defaults
          to `master` for most enrollments.
        in: query
        name: branchId
        required: false
        schema:
          $ref: '#/components/schemas/BranchId'
      - description: The Resource Identifier (RID) of the start Transaction.
        in: query
        name: startTransactionRid
        required: false
        schema:
          $ref: '#/components/schemas/TransactionRid'
      - description: The Resource Identifier (RID) of the end Transaction.
        in: query
        name: endTransactionRid
        required: false
        schema:
          $ref: '#/components/schemas/TransactionRid'
      - description: 'The desired size of the page to be returned. Defaults to 1,000.

          See [page sizes](/docs/foundry/api/general/overview/paging/#page-sizes)
          for details.

          '
        in: query
        name: pageSize
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - in: query
        name: pageToken
        required: false
        schema:
          $ref: '#/components/schemas/PageToken'
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - path: q3-data/my-file.csv
                  sizeBytes: '74930'
                  transactionRid: ri.foundry.main.transaction.bf9515c2-02d4-4703-8f84-c3b3c190254d
                  updatedTime: 2022-10-10 16:44:55.192000+00:00
                - path: q2-data/my-file.csv
                  sizeBytes: '47819'
                  transactionRid: ri.foundry.main.transaction.d8db1cfc-9f8b-4bad-9d8c-00bd818a37c5
                  updatedTime: 2022-07-12 10:12:50.919000+00:00
                - path: q2-data/my-other-file.csv
                  sizeBytes: '55320'
                  transactionRid: ri.foundry.main.transaction.d8db1cfc-9f8b-4bad-9d8c-00bd818a37c5
                  updatedTime: 2022-07-12 10:12:46.112000+00:00
                nextPageToken: v1.VGhlcmUgaXMgc28gbXVjaCBsZWZ0IHRvIGJ1aWxkIC0gcGFsYW50aXIuY29tL2NhcmVlcnMv
              schema:
                $ref: '#/components/schemas/ListFilesResponse'
          description: ''
      security:
      - BearerAuth: []
      tags:
      - DatasetsApiService
  /v1/datasets/{datasetRid}/files/{filePath}:
    delete:
      description: "Deletes a File from a Dataset. By default the file is deleted\
        \ in a new transaction on the default \nbranch - `master` for most enrollments.\
        \ The file will still be visible on historical views.\n\n#### Advanced Usage\n\
        \             \nSee [Datasets Core Concepts](/docs/foundry/data-integration/datasets/)\
        \ for details on using branches and transactions.\n\nTo **delete a File from\
        \ a specific Branch** specify the Branch's identifier as `branchId`. A new\
        \ delete Transaction \nwill be created and committed on this branch.\n\nTo\
        \ **delete a File using a manually opened Transaction**, specify the Transaction's\
        \ resource identifier \nas `transactionRid`. The transaction must be of type\
        \ `DELETE`. This is useful for deleting multiple files in a\nsingle transaction.\
        \ See [createTransaction](/docs/foundry/api/datasets-resources/transactions/create-transaction/)\
        \ to \nopen a transaction.\n\nThird-party applications using this endpoint\
        \ via OAuth2 must request the following operation scope: `api:datasets-write`.\n"
      operationId: deleteFile
      parameters:
      - description: The Resource Identifier (RID) of the Dataset on which to delete
          the File.
        example: ri.foundry.main.dataset.c26f11c8-cdb3-4f44-9f5d-9816ea1c82da
        in: path
        name: datasetRid
        required: true
        schema:
          $ref: '#/components/schemas/DatasetRid'
      - description: The File path within the Dataset.
        example: q3-data%2fmy-file.csv
        in: path
        name: filePath
        required: true
        schema:
          $ref: '#/components/schemas/FilePath'
      - description: The identifier (name) of the Branch on which to delete the File.
          Defaults to `master` for most enrollments.
        in: query
        name: branchId
        required: false
        schema:
          $ref: '#/components/schemas/BranchId'
      - description: The Resource Identifier (RID) of the open delete Transaction
          on which to delete the File.
        in: query
        name: transactionRid
        required: false
        schema:
          $ref: '#/components/schemas/TransactionRid'
      responses:
        '204':
          description: File deleted.
      security:
      - BearerAuth: []
      tags:
      - DatasetsApiService
    get:
      description: "Gets metadata about a File contained in a Dataset. By default\
        \ this retrieves the file's metadata from the latest\nview of the default\
        \ branch - `master` for most enrollments.\n\n#### Advanced Usage\n\nSee [Datasets\
        \ Core Concepts](/docs/foundry/data-integration/datasets/) for details on\
        \ using branches and transactions. \n\nTo **get a file's metadata from a specific\
        \ Branch** specify the Branch's identifier as `branchId`. This will \nretrieve\
        \ metadata for the most recent version of the file since the latest snapshot\
        \ transaction, or the earliest\nancestor transaction of the branch if there\
        \ are no snapshot transactions.\n\nTo **get a file's metadata from the resolved\
        \ view of a transaction** specify the Transaction's resource identifier\n\
        as `endTransactionRid`. This will retrieve metadata for the most recent version\
        \ of the file since the latest snapshot\ntransaction, or the earliest ancestor\
        \ transaction if there are no snapshot transactions.\n\nTo **get a file's\
        \ metadata from the resolved view of a range of transactions** specify the\
        \ the start transaction's\nresource identifier as `startTransactionRid` and\
        \ the end transaction's resource identifier as `endTransactionRid`.\nThis\
        \ will retrieve metadata for the most recent version of the file since the\
        \ `startTransactionRid` up to the \n`endTransactionRid`. Behavior is undefined\
        \ when the start and end transactions do not belong to the same root-to-leaf\
        \ path.\n\nTo **get a file's metadata from a specific transaction** specify\
        \ the Transaction's resource identifier as both the \n`startTransactionRid`\
        \ and `endTransactionRid`.\n\nThird-party applications using this endpoint\
        \ via OAuth2 must request the following operation scope: `api:datasets-read`.\n"
      operationId: getFileMetadata
      parameters:
      - description: The Resource Identifier (RID) of the Dataset that contains the
          File.
        example: ri.foundry.main.dataset.c26f11c8-cdb3-4f44-9f5d-9816ea1c82da
        in: path
        name: datasetRid
        required: true
        schema:
          $ref: '#/components/schemas/DatasetRid'
      - description: The File's path within the Dataset.
        example: q3-data%2fmy-file.csv
        in: path
        name: filePath
        required: true
        schema:
          $ref: '#/components/schemas/FilePath'
      - description: The identifier (name) of the Branch that contains the File. Defaults
          to `master` for most enrollments.
        in: query
        name: branchId
        required: false
        schema:
          $ref: '#/components/schemas/BranchId'
      - description: The Resource Identifier (RID) of the start Transaction.
        in: query
        name: startTransactionRid
        required: false
        schema:
          $ref: '#/components/schemas/TransactionRid'
      - description: The Resource Identifier (RID) of the end Transaction.
        in: query
        name: endTransactionRid
        required: false
        schema:
          $ref: '#/components/schemas/TransactionRid'
      responses:
        '200':
          content:
            application/json:
              example:
                path: q3-data/my-file.csv
                sizeBytes: '74930'
                transactionRid: ri.foundry.main.transaction.bf9515c2-02d4-4703-8f84-c3b3c190254d
                updatedTime: 2022-10-10 16:44:55.192000+00:00
              schema:
                $ref: '#/components/schemas/File'
          description: ''
      security:
      - BearerAuth: []
      tags:
      - DatasetsApiService
  /v1/datasets/{datasetRid}/files/{filePath}/content:
    get:
      description: "Gets the content of a File contained in a Dataset. By default\
        \ this retrieves the file's content from the latest\nview of the default branch\
        \ - `master` for most enrollments.\n\n#### Advanced Usage\n\nSee [Datasets\
        \ Core Concepts](/docs/foundry/data-integration/datasets/) for details on\
        \ using branches and transactions. \n\nTo **get a file's content from a specific\
        \ Branch** specify the Branch's identifier as `branchId`. This will \nretrieve\
        \ the content for the most recent version of the file since the latest snapshot\
        \ transaction, or the\nearliest ancestor transaction of the branch if there\
        \ are no snapshot transactions.\n\nTo **get a file's content from the resolved\
        \ view of a transaction** specify the Transaction's resource identifier\n\
        as `endTransactionRid`. This will retrieve the content for the most recent\
        \ version of the file since the latest\nsnapshot transaction, or the earliest\
        \ ancestor transaction if there are no snapshot transactions.\n\nTo **get\
        \ a file's content from the resolved view of a range of transactions** specify\
        \ the the start transaction's\nresource identifier as `startTransactionRid`\
        \ and the end transaction's resource identifier as `endTransactionRid`.\n\
        This will retrieve the content for the most recent version of the file since\
        \ the `startTransactionRid` up to the \n`endTransactionRid`. Note that an\
        \ intermediate snapshot transaction will remove all files from the view. Behavior\n\
        is undefined when the start and end transactions do not belong to the same\
        \ root-to-leaf path.\n\nTo **get a file's content from a specific transaction**\
        \ specify the Transaction's resource identifier as both the \n`startTransactionRid`\
        \ and `endTransactionRid`.\n\nThird-party applications using this endpoint\
        \ via OAuth2 must request the following operation scope: `api:datasets-read`.\n"
      operationId: getFileContent
      parameters:
      - description: The Resource Identifier (RID) of the Dataset that contains the
          File.
        in: path
        name: datasetRid
        required: true
        schema:
          $ref: '#/components/schemas/DatasetRid'
      - description: The File's path within the Dataset.
        example: q3-data%2fmy-file.csv
        in: path
        name: filePath
        required: true
        schema:
          $ref: '#/components/schemas/FilePath'
      - description: The identifier (name) of the Branch that contains the File. Defaults
          to `master` for most enrollments.
        in: query
        name: branchId
        required: false
        schema:
          $ref: '#/components/schemas/BranchId'
      - description: The Resource Identifier (RID) of the start Transaction.
        in: query
        name: startTransactionRid
        required: false
        schema:
          $ref: '#/components/schemas/TransactionRid'
      - description: The Resource Identifier (RID) of the end Transaction.
        in: query
        name: endTransactionRid
        required: false
        schema:
          $ref: '#/components/schemas/TransactionRid'
      responses:
        '200':
          content:
            '*/*':
              schema:
                format: binary
                type: string
          description: ''
      security:
      - BearerAuth: []
      tags:
      - DatasetsApiService
  /v1/datasets/{datasetRid}/files:upload:
    post:
      description: "Uploads a File to an existing Dataset.\nThe body of the request\
        \ must contain the binary content of the file and the `Content-Type` header\
        \ must be `application/octet-stream`.\n\nBy default the file is uploaded to\
        \ a new transaction on the default branch - `master` for most enrollments.\n\
        If the file already exists only the most recent version will be visible in\
        \ the updated view.\n\n#### Advanced Usage\n\nSee [Datasets Core Concepts](/docs/foundry/data-integration/datasets/)\
        \ for details on using branches and transactions. \n\nTo **upload a file to\
        \ a specific Branch** specify the Branch's identifier as `branchId`. A new\
        \ transaction will \nbe created and committed on this branch. By default the\
        \ TransactionType will be `UPDATE`, to override this\ndefault specify `transactionType`\
        \ in addition to `branchId`. \nSee [createBranch](/docs/foundry/api/datasets-resources/branches/create-branch/)\
        \ to create a custom branch.\n\nTo **upload a file on a manually opened transaction**\
        \ specify the Transaction's resource identifier as\n`transactionRid`. This\
        \ is useful for uploading multiple files in a single transaction. \nSee [createTransaction](/docs/foundry/api/datasets-resources/transactions/create-transaction/)\
        \ to open a transaction.\n\nThird-party applications using this endpoint via\
        \ OAuth2 must request the following operation scope: `api:datasets-write`.\n"
      operationId: uploadFile
      parameters:
      - description: The Resource Identifier (RID) of the Dataset on which to upload
          the File.
        in: path
        name: datasetRid
        required: true
        schema:
          $ref: '#/components/schemas/DatasetRid'
      - description: The File's path within the Dataset.
        example: q3-data%2fmy-file.csv
        in: query
        name: filePath
        required: true
        schema:
          $ref: '#/components/schemas/FilePath'
      - description: The identifier (name) of the Branch on which to upload the File.
          Defaults to `master` for most enrollments.
        in: query
        name: branchId
        required: false
        schema:
          $ref: '#/components/schemas/BranchId'
      - description: The type of the Transaction to create when using branchId. Defaults
          to `UPDATE`.
        in: query
        name: transactionType
        required: false
        schema:
          $ref: '#/components/schemas/TransactionType'
      - description: The Resource Identifier (RID) of the open Transaction on which
          to upload the File.
        in: query
        name: transactionRid
        required: false
        schema:
          $ref: '#/components/schemas/TransactionRid'
      requestBody:
        content:
          '*/*':
            schema:
              format: binary
              type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                path: q3-data/my-file.csv
                sizeBytes: '74930'
                transactionRid: ri.foundry.main.transaction.bf9515c2-02d4-4703-8f84-c3b3c190254d
                updatedTime: 2022-10-10 16:44:55.192000+00:00
              schema:
                $ref: '#/components/schemas/File'
          description: ''
      security:
      - BearerAuth: []
      tags:
      - DatasetsApiService
  /v1/datasets/{datasetRid}/readTable:
    get:
      description: ":::callout{theme=warning title=Warning}\n  This endpoint is in\
        \ preview and may be modified or removed at any time.\n  To use this endpoint,\
        \ add `preview=true` to the request query parameters.\n  Furthermore, this\
        \ endpoint currently does not support views (Virtual datasets composed of\
        \ other datasets).\n:::\n\nGets the content of a dataset as a table in the\
        \ specified format.\n\nThird-party applications using this endpoint via OAuth2\
        \ must request the following operation scope: `api:datasets-read`.\n"
      operationId: readTable
      parameters:
      - description: 'The RID of the Dataset.

          '
        in: path
        name: datasetRid
        required: true
        schema:
          $ref: '#/components/schemas/DatasetRid'
      - description: The identifier (name) of the Branch.
        in: query
        name: branchId
        required: false
        schema:
          $ref: '#/components/schemas/BranchId'
      - description: The Resource Identifier (RID) of the start Transaction.
        in: query
        name: startTransactionRid
        required: false
        schema:
          $ref: '#/components/schemas/TransactionRid'
      - description: The Resource Identifier (RID) of the end Transaction.
        in: query
        name: endTransactionRid
        required: false
        schema:
          $ref: '#/components/schemas/TransactionRid'
      - description: 'The export format. Must be `ARROW` or `CSV`.

          '
        example: CSV
        in: query
        name: format
        required: true
        schema:
          $ref: '#/components/schemas/TableExportFormat'
      - description: 'A subset of the dataset columns to include in the result. Defaults
          to all columns.

          '
        in: query
        name: columns
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 'A limit on the number of rows to return. Note that row ordering
          is non-deterministic.

          '
        in: query
        name: rowLimit
        required: false
        schema:
          type: integer
      - description: 'A boolean flag that, when set to true, enables the use of beta
          features in preview mode.

          '
        in: query
        name: preview
        required: false
        schema:
          $ref: '#/components/schemas/PreviewMode'
      responses:
        '200':
          content:
            '*/*':
              schema:
                format: binary
                type: string
          description: The content stream.
      security:
      - BearerAuth: []
      tags:
      - DatasetsApiService
  /v1/datasets/{datasetRid}/schema:
    delete:
      description: 'Deletes the Schema from a Dataset and Branch.

        '
      operationId: deleteSchema
      parameters:
      - description: 'The RID of the Dataset on which to delete the schema.

          '
        in: path
        name: datasetRid
        required: true
        schema:
          $ref: '#/components/schemas/DatasetRid'
      - description: 'The ID of the Branch on which to delete the schema.

          '
        in: query
        name: branchId
        required: false
        schema:
          $ref: '#/components/schemas/BranchId'
      - description: 'The RID of the Transaction on which to delete the schema.

          '
        in: query
        name: transactionRid
        required: false
        schema:
          $ref: '#/components/schemas/TransactionRid'
      - example: true
        in: query
        name: preview
        required: false
        schema:
          $ref: '#/components/schemas/PreviewMode'
      responses:
        '204':
          description: Schema deleted.
      security:
      - BearerAuth: []
      tags:
      - DatasetsApiService
    get:
      description: 'Retrieves the Schema for a Dataset and Branch, if it exists.

        '
      operationId: getSchema
      parameters:
      - description: 'The RID of the Dataset.

          '
        in: path
        name: datasetRid
        required: true
        schema:
          $ref: '#/components/schemas/DatasetRid'
      - description: 'The ID of the Branch.

          '
        in: query
        name: branchId
        required: false
        schema:
          $ref: '#/components/schemas/BranchId'
      - description: 'The TransactionRid that contains the Schema.

          '
        in: query
        name: transactionRid
        required: false
        schema:
          $ref: '#/components/schemas/TransactionRid'
      - example: true
        in: query
        name: preview
        required: false
        schema:
          $ref: '#/components/schemas/PreviewMode'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: ''
        '204':
          description: No Content
      security:
      - BearerAuth: []
      tags:
      - DatasetsApiService
    put:
      description: 'Puts a Schema on an existing Dataset and Branch.

        '
      operationId: putSchema
      parameters:
      - description: 'The RID of the Dataset on which to put the Schema.

          '
        in: path
        name: datasetRid
        required: true
        schema:
          $ref: '#/components/schemas/DatasetRid'
      - description: 'The ID of the Branch on which to put the Schema.

          '
        in: query
        name: branchId
        required: false
        schema:
          $ref: '#/components/schemas/BranchId'
      - example: true
        in: query
        name: preview
        required: false
        schema:
          $ref: '#/components/schemas/PreviewMode'
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '204':
          description: ''
      security:
      - BearerAuth: []
      tags:
      - DatasetsApiService
  /v1/datasets/{datasetRid}/transactions:
    post:
      description: 'Creates a Transaction on a Branch of a Dataset.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:datasets-write`.

        '
      operationId: createTransaction
      parameters:
      - description: The Resource Identifier (RID) of the Dataset on which to create
          the Transaction.
        example: ri.foundry.main.dataset.c26f11c8-cdb3-4f44-9f5d-9816ea1c82da
        in: path
        name: datasetRid
        required: true
        schema:
          $ref: '#/components/schemas/DatasetRid'
      - description: 'The identifier (name) of the Branch on which to create the Transaction.
          Defaults to `master` for most enrollments.

          '
        in: query
        name: branchId
        required: false
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            example:
              transactionType: SNAPSHOT
            schema:
              $ref: '#/components/schemas/CreateTransactionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                createdTime: 2022-10-10 12:23:11.152000+00:00
                rid: ri.foundry.main.transaction.abffc380-ea68-4843-9be1-9f44d2565496
                status: OPEN
                transactionType: SNAPSHOT
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
      security:
      - BearerAuth: []
      tags:
      - DatasetsApiService
  /v1/datasets/{datasetRid}/transactions/{transactionRid}:
    get:
      description: 'Gets a Transaction of a Dataset.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:datasets-read`.

        '
      operationId: getTransaction
      parameters:
      - description: The Resource Identifier (RID) of the Dataset that contains the
          Transaction.
        example: ri.foundry.main.dataset.c26f11c8-cdb3-4f44-9f5d-9816ea1c82da
        in: path
        name: datasetRid
        required: true
        schema:
          $ref: '#/components/schemas/DatasetRid'
      - description: The Resource Identifier (RID) of the Transaction.
        example: ri.foundry.main.transaction.abffc380-ea68-4843-9be1-9f44d2565496
        in: path
        name: transactionRid
        required: true
        schema:
          $ref: '#/components/schemas/TransactionRid'
      responses:
        '200':
          content:
            application/json:
              example:
                createdTime: 2022-10-10 12:20:15.166000+00:00
                rid: ri.foundry.main.transaction.abffc380-ea68-4843-9be1-9f44d2565496
                status: OPEN
                transactionType: SNAPSHOT
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
      security:
      - BearerAuth: []
      tags:
      - DatasetsApiService
  /v1/datasets/{datasetRid}/transactions/{transactionRid}/abort:
    post:
      description: 'Aborts an open Transaction. File modifications made on this Transaction
        are not preserved and the Branch is

        not updated.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:datasets-write`.

        '
      operationId: abortTransaction
      parameters:
      - description: The Resource Identifier (RID) of the Dataset that contains the
          Transaction.
        example: ri.foundry.main.dataset.c26f11c8-cdb3-4f44-9f5d-9816ea1c82da
        in: path
        name: datasetRid
        required: true
        schema:
          $ref: '#/components/schemas/DatasetRid'
      - description: The Resource Identifier (RID) of the Transaction.
        example: ri.foundry.main.transaction.abffc380-ea68-4843-9be1-9f44d2565496
        in: path
        name: transactionRid
        required: true
        schema:
          $ref: '#/components/schemas/TransactionRid'
      responses:
        '200':
          content:
            application/json:
              example:
                closedTime: 2022-10-10 12:23:11.152000+00:00
                createdTime: 2022-10-10 12:20:15.166000+00:00
                rid: ri.foundry.main.transaction.abffc380-ea68-4843-9be1-9f44d2565496
                status: ABORTED
                transactionType: SNAPSHOT
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
      security:
      - BearerAuth: []
      tags:
      - DatasetsApiService
  /v1/datasets/{datasetRid}/transactions/{transactionRid}/commit:
    post:
      description: 'Commits an open Transaction. File modifications made on this Transaction
        are preserved and the Branch is

        updated to point to the Transaction.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:datasets-write`.

        '
      operationId: commitTransaction
      parameters:
      - description: The Resource Identifier (RID) of the Dataset that contains the
          Transaction.
        example: ri.foundry.main.dataset.c26f11c8-cdb3-4f44-9f5d-9816ea1c82da
        in: path
        name: datasetRid
        required: true
        schema:
          $ref: '#/components/schemas/DatasetRid'
      - description: The Resource Identifier (RID) of the Transaction.
        example: ri.foundry.main.transaction.abffc380-ea68-4843-9be1-9f44d2565496
        in: path
        name: transactionRid
        required: true
        schema:
          $ref: '#/components/schemas/TransactionRid'
      responses:
        '200':
          content:
            application/json:
              example:
                closedTime: 2022-10-10 12:23:11.152000+00:00
                createdTime: 2022-10-10 12:20:15.166000+00:00
                rid: ri.foundry.main.transaction.abffc380-ea68-4843-9be1-9f44d2565496
                status: COMMITTED
                transactionType: SNAPSHOT
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
      security:
      - BearerAuth: []
      tags:
      - DatasetsApiService
  /v1/ontologies:
    get:
      description: 'Lists the Ontologies visible to the current user.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:read-data`.

        '
      operationId: listOntologies
      parameters: []
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - apiName: default-ontology
                  description: The default ontology
                  displayName: Ontology
                  rid: ri.ontology.main.ontology.c61d9ab5-2919-4127-a0a1-ac64c0ce6367
                - apiName: shared-ontology
                  description: The ontology shared with our suppliers
                  displayName: Shared ontology
                  rid: ri.ontology.main.ontology.c61d9ab5-2919-4127-a0a1-ac64c0ce6367
              schema:
                $ref: '#/components/schemas/ListOntologiesResponse'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesApiService
  /v1/ontologies/{ontologyRid}:
    get:
      description: 'Gets a specific ontology with the given Ontology RID.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:read-data`.

        '
      operationId: getOntology
      parameters:
      - description: 'The unique Resource Identifier (RID) of the Ontology. To look
          up your Ontology RID, please use the

          **List ontologies** endpoint or check the **Ontology Manager**.

          '
        example: ri.ontology.main.ontology.c61d9ab5-2919-4127-a0a1-ac64c0ce6367
        in: path
        name: ontologyRid
        required: true
        schema:
          $ref: '#/components/schemas/OntologyRid'
      responses:
        '200':
          content:
            application/json:
              example:
                apiName: default-ontology
                description: The default ontology
                displayName: Ontology
                rid: ri.ontology.main.ontology.c61d9ab5-2919-4127-a0a1-ac64c0ce6367
              schema:
                $ref: '#/components/schemas/Ontology'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesApiService
  /v1/ontologies/{ontologyRid}/actionTypes:
    get:
      description: 'Lists the action types for the given Ontology.


        Each page may be smaller than the requested page size. However, it is guaranteed
        that if there are more

        results available, at least one result will be present in the response.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:read-data`.

        '
      operationId: listActionTypes
      parameters:
      - description: 'The unique Resource Identifier (RID) of the Ontology that contains
          the action types. To look up your Ontology RID, please use the

          **List ontologies** endpoint or check the **Ontology Manager**.

          '
        example: ri.ontology.main.ontology.c61d9ab5-2919-4127-a0a1-ac64c0ce6367
        in: path
        name: ontologyRid
        required: true
        schema:
          $ref: '#/components/schemas/OntologyRid'
      - description: 'The desired size of the page to be returned. Defaults to 500.

          See [page sizes](/docs/foundry/api/general/overview/paging/#page-sizes)
          for details.

          '
        in: query
        name: pageSize
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - in: query
        name: pageToken
        required: false
        schema:
          $ref: '#/components/schemas/PageToken'
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - apiName: promote-employee
                  description: Update an employee's title and compensation
                  parameters:
                    employeeId:
                      baseType: Integer
                    newCompensation:
                      baseType: Decimal
                    newTitle:
                      baseType: String
                  rid: ri.ontology.main.action-type.7ed72754-7491-428a-bb18-4d7296eb2167
                - apiName: move-office
                  description: Update an office's physical location
                  parameters:
                    newAddress:
                      baseType: String
                      description: The office's new physical address (not necessarily
                        shipping address)
                    newCapacity:
                      baseType: Integer
                      description: The maximum seated-at-desk capacity of the new
                        office (maximum fire-safe capacity may be higher)
                    officeId:
                      baseType: String
                  rid: ri.ontology.main.action-type.9f84017d-cf17-4fa8-84c3-8e01e5d594f2
                nextPageToken: v1.VGhlcmUgaXMgc28gbXVjaCBsZWZ0IHRvIGJ1aWxkIC0gcGFsYW50aXIuY29tL2NhcmVlcnMv
              schema:
                $ref: '#/components/schemas/ListActionTypesResponse'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesApiService
  /v1/ontologies/{ontologyRid}/actionTypes/{actionTypeApiName}:
    get:
      description: 'Gets a specific action type with the given API name.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:read-data`.

        '
      operationId: getActionType
      parameters:
      - description: 'The unique Resource Identifier (RID) of the Ontology that contains
          the action type.

          '
        example: ri.ontology.main.ontology.c61d9ab5-2919-4127-a0a1-ac64c0ce6367
        in: path
        name: ontologyRid
        required: true
        schema:
          $ref: '#/components/schemas/OntologyRid'
      - description: 'The name of the action type in the API.

          '
        example: promote-employee
        in: path
        name: actionTypeApiName
        required: true
        schema:
          $ref: '#/components/schemas/ActionTypeApiName'
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  apiName: promote-employee
                  description: Update an employee's title and compensation
                  parameters:
                    employeeId:
                      baseType: Integer
                    newCompensation:
                      baseType: Decimal
                    newTitle:
                      baseType: String
                  rid: ri.ontology.main.action-type.7ed72754-7491-428a-bb18-4d7296eb2167
              schema:
                $ref: '#/components/schemas/ActionType'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesApiService
  /v1/ontologies/{ontologyRid}/objectTypes:
    get:
      description: 'Lists the object types for the given Ontology.


        Each page may be smaller or larger than the requested page size. However,
        it is guaranteed that if there are

        more results available, at least one result will be present in the

        response.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:read-data`.

        '
      operationId: listObjectTypes
      parameters:
      - description: 'The unique Resource Identifier (RID) of the Ontology that contains
          the object types. To look up your Ontology RID, please use the

          **List ontologies** endpoint or check the **Ontology Manager**.

          '
        example: ri.ontology.main.ontology.c61d9ab5-2919-4127-a0a1-ac64c0ce6367
        in: path
        name: ontologyRid
        required: true
        schema:
          $ref: '#/components/schemas/OntologyRid'
      - description: 'The desired size of the page to be returned. Defaults to 500.

          See [page sizes](/docs/foundry/api/general/overview/paging/#page-sizes)
          for details.

          '
        in: query
        name: pageSize
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - in: query
        name: pageToken
        required: false
        schema:
          $ref: '#/components/schemas/PageToken'
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - apiName: employee
                  description: A full-time or part-time employee of our firm
                  primaryKey:
                  - employeeId
                  properties:
                    employeeId:
                      baseType: Integer
                    fullName:
                      baseType: String
                    office:
                      baseType: String
                      description: The unique ID of the employee's primary assigned
                        office
                    startDate:
                      baseType: Date
                      description: The date the employee was hired (most recently,
                        if they were re-hired)
                  rid: ri.ontology.main.object-type.401ac022-89eb-4591-8b7e-0a912b9efb44
                - apiName: office
                  description: A physical location (not including rented co-working
                    spaces)
                  primaryKey:
                  - officeId
                  properties:
                    address:
                      baseType: String
                      description: The office's physical address (not necessarily
                        shipping address)
                    capacity:
                      baseType: Integer
                      description: The maximum seated-at-desk capacity of the office
                        (maximum fire-safe capacity may be higher)
                    officeId:
                      baseType: String
                  rid: ri.ontology.main.object-type.9a0e4409-9b50-499f-a637-a3b8334060d9
                nextPageToken: v1.VGhlcmUgaXMgc28gbXVjaCBsZWZ0IHRvIGJ1aWxkIC0gcGFsYW50aXIuY29tL2NhcmVlcnMv
              schema:
                $ref: '#/components/schemas/ListObjectTypesResponse'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesApiService
  /v1/ontologies/{ontologyRid}/objectTypes/{objectType}:
    get:
      description: 'Gets a specific object type with the given API name.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:read-data`.

        '
      operationId: getObjectType
      parameters:
      - description: 'The unique Resource Identifier (RID) of the Ontology that contains
          the object type. To look up your Ontology RID, please use the

          **List ontologies** endpoint or check the **Ontology Manager**.

          '
        example: ri.ontology.main.ontology.c61d9ab5-2919-4127-a0a1-ac64c0ce6367
        in: path
        name: ontologyRid
        required: true
        schema:
          $ref: '#/components/schemas/OntologyRid'
      - description: 'The API name of the object type. To find the API name, use the
          **List object types** endpoint or

          check the **Ontology Manager**.

          '
        example: employee
        in: path
        name: objectType
        required: true
        schema:
          $ref: '#/components/schemas/ObjectTypeApiName'
      responses:
        '200':
          content:
            application/json:
              example:
                apiName: employee
                description: A full-time or part-time employee of our firm
                primaryKey:
                - employeeId
                properties:
                  employeeId:
                    baseType: Integer
                  fullName:
                    baseType: String
                  office:
                    baseType: String
                    description: The unique ID of the employee's primary assigned
                      office
                  startDate:
                    baseType: Date
                    description: The date the employee was hired (most recently, if
                      they were re-hired)
                rid: ri.ontology.main.object-type.0381eda6-69bb-4cb7-8ba0-c6158e094a04
              schema:
                $ref: '#/components/schemas/ObjectType'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesApiService
  /v1/ontologies/{ontologyRid}/objectTypes/{objectType}/outgoingLinkTypes:
    get:
      description: 'List the outgoing links for an object type.


        Third-party applications using this endpoint via OAuth2 must request the

        following operation scopes: `api:read-data`.

        '
      operationId: listOutgoingLinkTypes
      parameters:
      - description: 'The unique Resource Identifier (RID) of the Ontology that contains
          the object type. To look up your Ontology RID, please use the

          **List ontologies** endpoint or check the **Ontology Manager** application.

          '
        example: ri.ontology.main.ontology.c61d9ab5-2919-4127-a0a1-ac64c0ce6367
        in: path
        name: ontologyRid
        required: true
        schema:
          $ref: '#/components/schemas/OntologyRid'
      - description: 'The API name of the object type. To find the API name, use the
          **List object types** endpoint or

          check the **Ontology Manager** application.

          '
        example: Flight
        in: path
        name: objectType
        required: true
        schema:
          $ref: '#/components/schemas/ObjectTypeApiName'
      - description: The desired size of the page to be returned.
        in: query
        name: pageSize
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - in: query
        name: pageToken
        required: false
        schema:
          $ref: '#/components/schemas/PageToken'
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - apiName: originAirport
                  cardinality: ONE
                  foreignKeyPropertyApiName: originAirportId
                  objectTypeApiName: Airport
                nextPageToken: v1.VGhlcmUgaXMgc28gbXVjaCBsZWZ0IHRvIGJ1aWxkIC0gcGFsYW50aXIuY29tL2NhcmVlcnMv
              schema:
                $ref: '#/components/schemas/ListOutgoingLinkTypesResponse'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesApiService
  /v1/ontologies/{ontologyRid}/objectTypes/{objectType}/outgoingLinkTypes/{linkType}:
    get:
      description: 'Get an outgoing link for an object type.


        Third-party applications using this endpoint via OAuth2 must request the

        following operation scopes: `api:read-data`.

        '
      operationId: getOutgoingLinkType
      parameters:
      - description: 'The unique Resource Identifier (RID) of the Ontology that contains
          the object type. To look up your Ontology RID, please use the

          **List ontologies** endpoint or check the **Ontology Manager** application.

          '
        example: ri.ontology.main.ontology.c61d9ab5-2919-4127-a0a1-ac64c0ce6367
        in: path
        name: ontologyRid
        required: true
        schema:
          $ref: '#/components/schemas/OntologyRid'
      - description: 'The API name of the object type. To find the API name, use the
          **List object types** endpoint or

          check the **Ontology Manager** application.

          '
        example: Employee
        in: path
        name: objectType
        required: true
        schema:
          $ref: '#/components/schemas/ObjectTypeApiName'
      - description: 'The API name of the outgoing link.

          To find the API name for your link type, check the **Ontology Manager**.

          '
        example: directReport
        in: path
        name: linkType
        required: true
        schema:
          $ref: '#/components/schemas/LinkTypeApiName'
      responses:
        '200':
          content:
            application/json:
              example:
                apiName: directReport
                cardinality: MANY
                objectTypeApiName: Employee
              schema:
                $ref: '#/components/schemas/LinkTypeSide'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesApiService
  /v1/ontologies/{ontologyRid}/queryTypes:
    get:
      description: 'Lists the query types for the given Ontology.


        Each page may be smaller than the requested page size. However, it is guaranteed
        that if there are more

        results available, at least one result will be present in the response.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:read-data`.

        '
      operationId: listQueryTypes
      parameters:
      - description: 'The unique Resource Identifier (RID) of the Ontology that contains
          the query types. To look up your Ontology RID, please use the

          **List ontologies** endpoint or check the **Ontology Manager**.

          '
        example: ri.ontology.main.ontology.c61d9ab5-2919-4127-a0a1-ac64c0ce6367
        in: path
        name: ontologyRid
        required: true
        schema:
          $ref: '#/components/schemas/OntologyRid'
      - description: 'The desired size of the page to be returned. Defaults to 100.

          See [page sizes](/docs/foundry/api/general/overview/paging/#page-sizes)
          for details.

          '
        in: query
        name: pageSize
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - in: query
        name: pageToken
        required: false
        schema:
          $ref: '#/components/schemas/PageToken'
      - example: true
        in: query
        name: preview
        required: false
        schema:
          $ref: '#/components/schemas/PreviewMode'
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - apiName: getEmployeesInCity
                  description: Gets all employees in a given city
                  displayName: Get Employees in City
                  output: Array<OntologyObject<Employee>>
                  parameters:
                    city:
                      baseType: String
                      description: The city to search for employees in
                      required: true
                  rid: ri.function-registry.main.function.f05481407-1d67-4120-83b4-e3fed5305a29b
                  version: 1.1.3-rc1
                - apiName: getAverageTenureOfEmployees
                  description: Gets the average tenure of all employees
                  displayName: Get Average Tenure
                  output: Double
                  parameters:
                    employees:
                      baseType: String
                      description: An object set of the employees to calculate the
                        average tenure of
                      required: true
                    useMedian:
                      baseType: Boolean
                      description: An optional flag to use the median instead of the
                        mean, defaults to false
                      required: false
                  rid: ri.function-registry.main.function.9549c29d3-e92f-64a1-beeb-af817819a400
                  version: 2.1.1
                nextPageToken: v1.VGhlcmUgaXMgc28gbXVjaCBsZWZ0IHRvIGJ1aWxkIC0gcGFsYW50aXIuY29tL2NhcmVlcnMv
              schema:
                $ref: '#/components/schemas/ListQueryTypesResponse'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesApiService
  /v1/ontologies/{ontologyRid}/queryTypes/{queryApiName}:
    get:
      description: 'Gets a specific query type with the given API name.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:read-data`.

        '
      operationId: getQueryType
      parameters:
      - description: 'The unique Resource Identifier (RID) of the Ontology that contains
          the query type. To look up your Ontology RID, please use the

          **List ontologies** endpoint or check the **Ontology Manager**.

          '
        example: ri.ontology.main.ontology.c61d9ab5-2919-4127-a0a1-ac64c0ce6367
        in: path
        name: ontologyRid
        required: true
        schema:
          $ref: '#/components/schemas/OntologyRid'
      - description: 'The API name of the query type. To find the API name, use the
          **List query types** endpoint or

          check the **Ontology Manager**.

          '
        example: getEmployeesInCity
        in: path
        name: queryApiName
        required: true
        schema:
          $ref: '#/components/schemas/QueryApiName'
      - example: true
        in: query
        name: preview
        required: false
        schema:
          $ref: '#/components/schemas/PreviewMode'
      responses:
        '200':
          content:
            application/json:
              example:
                apiName: getEmployeesInCity
                description: Gets all employees in a given city
                displayName: Get Employees in City
                output: Array<OntologyObject<Employee>>
                parameters:
                  city:
                    baseType: String
                    description: The city to search for employees in
                    required: true
                rid: ri.function-registry.main.function.f05481407-1d67-4120-83b4-e3fed5305a29b
                version: 1.1.3-rc1
              schema:
                $ref: '#/components/schemas/QueryType'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesApiService
  /v2/ontologies:
    get:
      description: 'Lists the Ontologies visible to the current user.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:read-data`.

        '
      operationId: listOntologiesV2
      parameters: []
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - apiName: default-ontology
                  description: The default ontology
                  displayName: Ontology
                  rid: ri.ontology.main.ontology.c61d9ab5-2919-4127-a0a1-ac64c0ce6367
                - apiName: shared-ontology
                  description: The ontology shared with our suppliers
                  displayName: Shared ontology
                  rid: ri.ontology.main.ontology.c61d9ab5-2919-4127-a0a1-ac64c0ce6367
              schema:
                $ref: '#/components/schemas/ListOntologiesV2Response'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesV2ApiService
  /v2/ontologies/{ontology}:
    get:
      description: 'Gets a specific ontology with the given Ontology RID.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:read-data`.

        '
      operationId: getOntologyV2
      parameters:
      - description: 'The API name of the ontology. To find the API name, use the
          **List ontologies** endpoint or

          check the **Ontology Manager**.

          '
        example: palantir
        in: path
        name: ontology
        required: true
        schema:
          $ref: '#/components/schemas/OntologyIdentifier'
      responses:
        '200':
          content:
            application/json:
              example:
                apiName: default-ontology
                description: The default ontology
                displayName: Ontology
                rid: ri.ontology.main.ontology.c61d9ab5-2919-4127-a0a1-ac64c0ce6367
              schema:
                $ref: '#/components/schemas/OntologyV2'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesV2ApiService
  /v2/ontologies/{ontology}/actionTypes:
    get:
      description: 'Lists the action types for the given Ontology.


        Each page may be smaller than the requested page size. However, it is guaranteed
        that if there are more

        results available, at least one result will be present in the response.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:read-data`.

        '
      operationId: listActionTypesV2
      parameters:
      - description: 'The API name of the ontology. To find the API name, use the
          **List ontologies** endpoint or

          check the **Ontology Manager**.

          '
        example: palantir
        in: path
        name: ontology
        required: true
        schema:
          $ref: '#/components/schemas/OntologyIdentifier'
      - description: 'The desired size of the page to be returned. Defaults to 500.

          See [page sizes](/docs/foundry/api/general/overview/paging/#page-sizes)
          for details.

          '
        in: query
        name: pageSize
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - in: query
        name: pageToken
        required: false
        schema:
          $ref: '#/components/schemas/PageToken'
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - apiName: promote-employee
                  description: Update an employee's title and compensation
                  parameters:
                    employeeId:
                      dataType:
                        type: integer
                    newCompensation:
                      dataType:
                        type: double
                    newTitle:
                      dataType:
                        type: string
                  rid: ri.ontology.main.action-type.7ed72754-7491-428a-bb18-4d7296eb2167
                - apiName: move-office
                  description: Update an office's physical location
                  parameters:
                    newAddress:
                      dataType:
                        type: string
                      description: The office's new physical address (not necessarily
                        shipping address)
                    newCapacity:
                      dataType:
                        type: integer
                      description: The maximum seated-at-desk capacity of the new
                        office (maximum fire-safe capacity may be higher)
                    officeId:
                      dataType:
                        type: string
                  rid: ri.ontology.main.action-type.9f84017d-cf17-4fa8-84c3-8e01e5d594f2
                nextPageToken: v1.VGhlcmUgaXMgc28gbXVjaCBsZWZ0IHRvIGJ1aWxkIC0gcGFsYW50aXIuY29tL2NhcmVlcnMv
              schema:
                $ref: '#/components/schemas/ListActionTypesResponseV2'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesV2ApiService
  /v2/ontologies/{ontology}/actionTypes/{actionType}:
    get:
      description: 'Gets a specific action type with the given API name.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:read-data`.

        '
      operationId: getActionTypeV2
      parameters:
      - description: 'The API name of the ontology. To find the API name, use the
          **List ontologies** endpoint or

          check the **Ontology Manager**.

          '
        example: palantir
        in: path
        name: ontology
        required: true
        schema:
          $ref: '#/components/schemas/OntologyIdentifier'
      - description: 'The name of the action type in the API.

          '
        example: promote-employee
        in: path
        name: actionType
        required: true
        schema:
          $ref: '#/components/schemas/ActionTypeApiName'
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  apiName: promote-employee
                  description: Update an employee's title and compensation
                  parameters:
                    employeeId:
                      dataType:
                        type: integer
                    newCompensation:
                      dataType:
                        type: double
                    newTitle:
                      dataType:
                        type: string
                  rid: ri.ontology.main.action-type.7ed72754-7491-428a-bb18-4d7296eb2167
              schema:
                $ref: '#/components/schemas/ActionTypeV2'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesV2ApiService
  /v2/ontologies/{ontology}/fullMetadata:
    get:
      description: 'Get the full Ontology metadata. This includes the objects, links,
        actions, and queries.

        '
      operationId: getOntologyFullMetadata
      parameters:
      - description: 'The API name of the ontology. To find the API name, use the
          **List ontologies** endpoint or

          check the **Ontology Manager**.

          '
        example: palantir
        in: path
        name: ontology
        required: true
        schema:
          $ref: '#/components/schemas/OntologyIdentifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OntologyFullMetadata'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesV2ApiService
  /v2/ontologies/{ontology}/models/deployments:
    get:
      description: 'Fetches a list of the available model deployments within a given
        Ontology.

        '
      operationId: listDeployments
      parameters:
      - description: 'The API name of the ontology. To find the API name, use the
          **List ontologies** endpoint or

          check the **Ontology Manager**.

          '
        example: palantir
        in: path
        name: ontology
        required: true
        schema:
          $ref: '#/components/schemas/OntologyIdentifier'
      responses:
        '200':
          content:
            application/json:
              example:
                deployments:
                - api:
                    transform:
                      inputs:
                      - name: inputData
                        propertyType:
                          subType:
                            fields:
                            - fieldType:
                                type: string
                              name: text
                            type: struct
                          type: array
                        required: true
                      - name: temperature
                        propertyType:
                          type: StringType
                        required: false
                      outputs:
                      - name: outputData
                        propertyType:
                          subType:
                            fields:
                            - fieldType:
                                type: string
                              name: character
                            type: struct
                          type: array
                        required: true
                  apiName: nextTokenPredictor
                  description: A light-weight model that takes in a string of text
                    and outputs the next most likely character
                - apiName: weatherPrediction
                  description: A weather prediction model that takes in atmospheric
                    predictions and outputs the likelihood of weather events
              schema:
                $ref: '#/components/schemas/ListDeploymentsResponse'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesV2ApiService
  /v2/ontologies/{ontology}/models/deployments/{deployment}:
    get:
      description: 'Fetches information about a model deployment within a given Ontology.

        '
      operationId: getDeployment
      parameters:
      - description: 'The API name of the ontology. To find the API name, use the
          **List ontologies** endpoint or

          check the **Ontology Manager**.

          '
        example: palantir
        in: path
        name: ontology
        required: true
        schema:
          $ref: '#/components/schemas/OntologyIdentifier'
      - description: 'The API name of the deployment you want to fetch information
          about.

          '
        example: nextTokenPredictor
        in: path
        name: deployment
        required: true
        schema:
          $ref: '#/components/schemas/DeploymentApiName'
      responses:
        '200':
          content:
            application/json:
              example:
                api:
                  transform:
                    inputs:
                    - name: inputData
                      propertyType:
                        subType:
                          fields:
                          - fieldType:
                              type: string
                            name: text
                          type: struct
                        type: array
                      required: true
                    - name: temperature
                      propertyType:
                        type: StringType
                      required: false
                    outputs:
                    - name: outputData
                      propertyType:
                        subType:
                          fields:
                          - fieldType:
                              type: string
                            name: character
                          type: struct
                        type: array
                      required: true
                apiName: nextTokenPredictor
                description: A light-weight model that takes in a string of text and
                  outputs the next most likely character
              schema:
                $ref: '#/components/schemas/DeploymentMetadata'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesV2ApiService
  /v2/ontologies/{ontology}/objectTypes:
    get:
      description: 'Lists the object types for the given Ontology.


        Each page may be smaller or larger than the requested page size. However,
        it is guaranteed that if there are

        more results available, at least one result will be present in the

        response.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:read-data`.

        '
      operationId: listObjectTypesV2
      parameters:
      - description: 'The API name of the ontology. To find the API name, use the
          **List ontologies** endpoint or

          check the **Ontology Manager**.

          '
        example: palantir
        in: path
        name: ontology
        required: true
        schema:
          $ref: '#/components/schemas/OntologyIdentifier'
      - description: 'The desired size of the page to be returned. Defaults to 500.

          See [page sizes](/docs/foundry/api/general/overview/paging/#page-sizes)
          for details.

          '
        in: query
        name: pageSize
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - in: query
        name: pageToken
        required: false
        schema:
          $ref: '#/components/schemas/PageToken'
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - apiName: employee
                  description: A full-time or part-time employee of our firm
                  displayName: Employee
                  primaryKey: employeeId
                  properties:
                    employeeId:
                      dataType:
                        type: integer
                    fullName:
                      dataType:
                        type: string
                    office:
                      dataType:
                        type: string
                      description: The unique ID of the employee's primary assigned
                        office
                    rid: ri.ontology.main.object-type.401ac022-89eb-4591-8b7e-0a912b9efb44
                    startDate:
                      dataType:
                        type: date
                      description: The date the employee was hired (most recently,
                        if they were re-hired)
                  status: ACTIVE
                - apiName: office
                  description: A physical location (not including rented co-working
                    spaces)
                  displayName: Office
                  primaryKey: officeId
                  properties:
                    address:
                      dataType:
                        type: string
                      description: The office's physical address (not necessarily
                        shipping address)
                    capacity:
                      dataType:
                        type: integer
                      description: The maximum seated-at-desk capacity of the office
                        (maximum fire-safe capacity may be higher)
                    officeId:
                      dataType:
                        type: string
                    rid: ri.ontology.main.object-type.9a0e4409-9b50-499f-a637-a3b8334060d9
                  status: ACTIVE
                nextPageToken: v1.VGhlcmUgaXMgc28gbXVjaCBsZWZ0IHRvIGJ1aWxkIC0gcGFsYW50aXIuY29tL2NhcmVlcnMv
              schema:
                $ref: '#/components/schemas/ListObjectTypesV2Response'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesV2ApiService
  /v2/ontologies/{ontology}/objectTypes/{objectType}:
    get:
      description: 'Gets a specific object type with the given API name.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:read-data`.

        '
      operationId: getObjectTypeV2
      parameters:
      - description: 'The API name of the ontology. To find the API name, use the
          **List ontologies** endpoint or

          check the **Ontology Manager**.

          '
        example: palantir
        in: path
        name: ontology
        required: true
        schema:
          $ref: '#/components/schemas/OntologyIdentifier'
      - description: 'The API name of the object type. To find the API name, use the
          **List object types** endpoint or

          check the **Ontology Manager**.

          '
        example: employee
        in: path
        name: objectType
        required: true
        schema:
          $ref: '#/components/schemas/ObjectTypeApiName'
      responses:
        '200':
          content:
            application/json:
              example:
                apiName: employee
                description: A full-time or part-time employee of our firm
                displayName: Employee
                primaryKey: employeeId
                properties:
                  employeeId:
                    dataType:
                      type: integer
                  fullName:
                    dataType:
                      type: string
                  office:
                    dataType:
                      type: string
                    description: The unique ID of the employee's primary assigned
                      office
                  startDate:
                    dataType:
                      type: date
                    description: The date the employee was hired (most recently, if
                      they were re-hired)
                rid: ri.ontology.main.object-type.0381eda6-69bb-4cb7-8ba0-c6158e094a04
                status: ACTIVE
              schema:
                $ref: '#/components/schemas/ObjectTypeV2'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesV2ApiService
  /v2/ontologies/{ontology}/objectTypes/{objectType}/outgoingLinkTypes:
    get:
      description: 'List the outgoing links for an object type.


        Third-party applications using this endpoint via OAuth2 must request the

        following operation scopes: `api:read-data`.

        '
      operationId: listOutgoingLinkTypesV2
      parameters:
      - description: 'The API name of the ontology. To find the API name, use the
          **List ontologies** endpoint or

          check the **Ontology Manager**.

          '
        example: palantir
        in: path
        name: ontology
        required: true
        schema:
          $ref: '#/components/schemas/OntologyIdentifier'
      - description: 'The API name of the object type. To find the API name, use the
          **List object types** endpoint or

          check the **Ontology Manager** application.

          '
        example: Flight
        in: path
        name: objectType
        required: true
        schema:
          $ref: '#/components/schemas/ObjectTypeApiName'
      - description: The desired size of the page to be returned.
        in: query
        name: pageSize
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - in: query
        name: pageToken
        required: false
        schema:
          $ref: '#/components/schemas/PageToken'
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - apiName: originAirport
                  cardinality: ONE
                  foreignKeyPropertyApiName: originAirportId
                  objectTypeApiName: Airport
                nextPageToken: v1.VGhlcmUgaXMgc28gbXVjaCBsZWZ0IHRvIGJ1aWxkIC0gcGFsYW50aXIuY29tL2NhcmVlcnMv
              schema:
                $ref: '#/components/schemas/ListOutgoingLinkTypesResponseV2'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesV2ApiService
  /v2/ontologies/{ontology}/objectTypes/{objectType}/outgoingLinkTypes/{linkType}:
    get:
      description: 'Get an outgoing link for an object type.


        Third-party applications using this endpoint via OAuth2 must request the

        following operation scopes: `api:read-data`.

        '
      operationId: getOutgoingLinkTypeV2
      parameters:
      - description: 'The API name of the ontology. To find the API name, use the
          **List ontologies** endpoint or

          check the **Ontology Manager**.

          '
        example: palantir
        in: path
        name: ontology
        required: true
        schema:
          $ref: '#/components/schemas/OntologyIdentifier'
      - description: 'The API name of the object type. To find the API name, use the
          **List object types** endpoint or

          check the **Ontology Manager** application.

          '
        example: Employee
        in: path
        name: objectType
        required: true
        schema:
          $ref: '#/components/schemas/ObjectTypeApiName'
      - description: 'The API name of the outgoing link.

          To find the API name for your link type, check the **Ontology Manager**.

          '
        example: directReport
        in: path
        name: linkType
        required: true
        schema:
          $ref: '#/components/schemas/LinkTypeApiName'
      responses:
        '200':
          content:
            application/json:
              example:
                apiName: directReport
                cardinality: MANY
                objectTypeApiName: Employee
              schema:
                $ref: '#/components/schemas/LinkTypeSideV2'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesV2ApiService
  /v2/ontologies/{ontology}/queryTypes:
    get:
      description: "Lists the query types for the given Ontology.        \n\nEach\
        \ page may be smaller than the requested page size. However, it is guaranteed\
        \ that if there are more\nresults available, at least one result will be present\
        \ in the response.        \n\nThird-party applications using this endpoint\
        \ via OAuth2 must request the following operation scope: `api:read-data`.\n"
      operationId: listQueryTypesV2
      parameters:
      - description: 'The API name of the ontology. To find the API name, use the
          **List ontologies** endpoint or

          check the **Ontology Manager**.

          '
        example: palantir
        in: path
        name: ontology
        required: true
        schema:
          $ref: '#/components/schemas/OntologyIdentifier'
      - description: 'The desired size of the page to be returned. Defaults to 100.

          See [page sizes](/docs/foundry/api/general/overview/paging/#page-sizes)
          for details.

          '
        in: query
        name: pageSize
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - in: query
        name: pageToken
        required: false
        schema:
          $ref: '#/components/schemas/PageToken'
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - apiName: getEmployeesInCity
                  description: Gets all employees in a given city
                  displayName: Get Employees in City
                  output:
                    dataType:
                      required: true
                      subType:
                        objectApiName: Employee
                        type: object
                      type: array
                    required: true
                  parameters:
                    city:
                      dataType:
                        type: string
                      description: The city to search for employees in
                      required: true
                  rid: ri.function-registry.main.function.f05481407-1d67-4120-83b4-e3fed5305a29b
                  version: 1.1.3-rc1
                - apiName: getAverageTenureOfEmployees
                  description: Gets the average tenure of all employees
                  displayName: Get Average Tenure
                  output:
                    dataType:
                      type: double
                    required: true
                  parameters:
                    employees:
                      dataType:
                        type: string
                      description: An object set of the employees to calculate the
                        average tenure of
                      required: true
                    useMedian:
                      dataType:
                        type: boolean
                      description: An optional flag to use the median instead of the
                        mean, defaults to false
                      required: false
                  rid: ri.function-registry.main.function.9549c29d3-e92f-64a1-beeb-af817819a400
                  version: 2.1.1
                nextPageToken: v1.VGhlcmUgaXMgc28gbXVjaCBsZWZ0IHRvIGJ1aWxkIC0gcGFsYW50aXIuY29tL2NhcmVlcnMv
              schema:
                $ref: '#/components/schemas/ListQueryTypesResponseV2'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesV2ApiService
  /v2/ontologies/{ontology}/queryTypes/{queryApiName}:
    get:
      description: 'Gets a specific query type with the given API name.


        Third-party applications using this endpoint via OAuth2 must request the following
        operation scope: `api:read-data`.

        '
      operationId: getQueryTypeV2
      parameters:
      - description: 'The API name of the ontology. To find the API name, use the
          **List ontologies** endpoint or

          check the **Ontology Manager**.

          '
        example: palantir
        in: path
        name: ontology
        required: true
        schema:
          $ref: '#/components/schemas/OntologyIdentifier'
      - description: 'The API name of the query type. To find the API name, use the
          **List query types** endpoint or

          check the **Ontology Manager**.

          '
        example: getEmployeesInCity
        in: path
        name: queryApiName
        required: true
        schema:
          $ref: '#/components/schemas/QueryApiName'
      responses:
        '200':
          content:
            application/json:
              example:
                apiName: getEmployeesInCity
                description: Gets all employees in a given city
                displayName: Get Employees in City
                output:
                  dataType:
                    subType:
                      objectApiName: Employee
                      type: object
                    type: array
                  required: true
                parameters:
                  city:
                    dataType:
                      type: string
                    description: The city to search for employees in
                    required: true
                rid: ri.function-registry.main.function.f05481407-1d67-4120-83b4-e3fed5305a29b
                version: 1.1.3-rc1
              schema:
                $ref: '#/components/schemas/QueryTypeV2'
          description: Success response.
      security:
      - BearerAuth: []
      tags:
      - OntologiesV2ApiService
